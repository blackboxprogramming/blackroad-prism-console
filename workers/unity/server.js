import express from "express";
import { createWriteStream } from "fs";
import { mkdir } from "fs/promises";
import path from "path";
import { finished } from "stream/promises";
import { randomUUID } from "crypto";
import yazl from "yazl";

const { ZipFile } = yazl;

const UNITY_VERSION = "2022.3.5f1";
const DEFAULT_PROJECT_NAME = "BlackRoadSample";
const DEFAULT_SCENE_NAME = "MainScene";

const app = express();
app.use(express.json({ limit: "1mb" }));

app.get("/healthz", (_req, res) => {
  res.json({ ok: true, service: "unity-exporter", unityVersion: UNITY_VERSION });
});

app.post("/export", async (req, res) => {
  try {
    const projectName = sanitizeName(req.body?.projectName, DEFAULT_PROJECT_NAME);
    const sceneName = sanitizeName(req.body?.sceneName, DEFAULT_SCENE_NAME);

    const outDir = path.join(process.cwd(), "downloads");
    await mkdir(outDir, { recursive: true });

    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    const zipFileName = `${projectName}-${timestamp}.zip`;
    const zipPath = path.join(outDir, zipFileName);

    const template = buildUnityTemplate({ projectName, sceneName });

    const zipFile = new ZipFile();
    const fileList = [];
    for (const [filePath, contents] of template.files.entries()) {
      zipFile.addBuffer(Buffer.from(contents, "utf8"), filePath);
      fileList.push(filePath);
    }

    const outStream = createWriteStream(zipPath);
    zipFile.outputStream.on("error", (err) => outStream.destroy(err));
    zipFile.outputStream.pipe(outStream);
    zipFile.end();
    await finished(outStream);

    res.json({
      ok: true,
      path: zipPath,
      project: {
        name: projectName,
        scene: `${sceneName}.unity`,
        unityVersion: UNITY_VERSION,
        files: fileList,
      },
      instructions: template.instructions,
    });
  } catch (e) {
    res.status(500).json({ ok: false, error: String(e) });
  }
});

const port = process.env.PORT || 3000;
app.listen(port, () => console.log("unity exporter listening on", port));

function sanitizeName(value, fallback) {
  if (typeof value !== "string") return fallback;
  const cleaned = value
    .trim()
    .replace(/[^A-Za-z0-9_-]+/g, "-")
    .replace(/-+/g, "-")
    .replace(/^-|-$/g, "");
  return cleaned.length > 0 ? cleaned : fallback;
}

function buildUnityTemplate({ projectName, sceneName }) {
  const sceneGuid = generateGuid();
  const scriptGuid = generateGuid();

  const files = new Map();
  files.set(
    "README.md",
    `# ${projectName}\n\n` +
      `This project was generated by the BlackRoad Unity exporter.\n\n` +
      `## Getting Started\n` +
      `1. Open the project in Unity ${UNITY_VERSION} or newer.\n` +
      `2. Load **Assets/Scenes/${sceneName}.unity**.\n` +
      `3. Press Play to see the sample scene and script output in the console.\n`
  );

  files.set(
    "ProjectSettings/ProjectVersion.txt",
    `m_EditorVersion: ${UNITY_VERSION}\n` +
      `m_EditorVersionWithRevision: ${UNITY_VERSION} (BlackRoad.LTS)\n`
  );

  files.set(
    "ProjectSettings/EditorBuildSettings.asset",
    `%YAML 1.1\n` +
      `%TAG !u! tag:unity3d.com,2011:\n` +
      `--- !u!1045 &1\n` +
      `EditorBuildSettings:\n` +
      `  m_ObjectHideFlags: 0\n` +
      `  serializedVersion: 2\n` +
      `  m_Scenes:\n` +
      `  - enabled: 1\n` +
      `    path: Assets/Scenes/${sceneName}.unity\n` +
      `    guid: ${sceneGuid}\n` +
      `  m_configObjects: {}\n`
  );

  files.set(
    "ProjectSettings/ProjectSettings.asset",
    `%YAML 1.1\n` +
      `%TAG !u! tag:unity3d.com,2011:\n` +
      `--- !u!129 &1\n` +
      `PlayerSettings:\n` +
      `  m_ObjectHideFlags: 0\n` +
      `  serializedVersion: 24\n` +
      `  companyName: BlackRoad\n` +
      `  productName: ${projectName}\n` +
      `  defaultScreenWidth: 1920\n` +
      `  defaultScreenHeight: 1080\n` +
      `  fullscreenMode: 1\n` +
      `  activeInputHandler: 0\n` +
      `  runInBackground: 1\n` +
      `  captureSingleScreen: 0\n` +
      `  companyNameLegacy: BlackRoad\n` +
      `  productNameLegacy: ${projectName}\n`
  );

  files.set(
    "Packages/manifest.json",
    `${JSON.stringify(buildManifest(projectName), null, 2)}\n`
  );

  files.set(
    `Assets/Scenes/${sceneName}.unity`,
    buildSceneContents({ sceneName, sceneGuid })
  );

  files.set(
    `Assets/Scenes/${sceneName}.unity.meta`,
    buildDefaultMeta(sceneGuid)
  );

  files.set(
    "Assets/Scripts/HelloBlackRoad.cs",
    `using UnityEngine;\n\n` +
      `public class HelloBlackRoad : MonoBehaviour\n` +
      `{\n` +
      `    void Start()\n` +
      `    {\n` +
      `        Debug.Log("${projectName} scene '${sceneName}' is ready.");\n` +
      `    }\n` +
      `}\n`
  );

  files.set(
    "Assets/Scripts/HelloBlackRoad.cs.meta",
    buildScriptMeta(scriptGuid)
  );

  files.set(
    ".gitignore",
    `Library/\nLogs/\nTemp/\nObj/\nBuild/\nBuilds/\nUserSettings/\n\n` +
      `# Generated by Unity\n` +
      `*.csproj\n*.sln\n*.user\n`
  );

  const instructions = {
    projectName,
    sceneName,
    sceneGuid,
    scriptGuid,
  };

  return { files, instructions };
}

function buildManifest(projectName) {
  return {
    dependencies: {
      "com.unity.collab-proxy": "2.0.3",
      "com.unity.ide.rider": "3.0.24",
      "com.unity.ide.visualstudio": "2.0.22",
      "com.unity.ide.vscode": "1.2.5",
      "com.unity.test-framework": "1.3.3",
      "com.unity.textmeshpro": "3.0.6",
      "com.unity.timeline": "1.7.6",
      "com.unity.ugui": "1.0.0",
      "com.unity.modules.ai": "1.0.0",
      "com.unity.modules.animation": "1.0.0",
      "com.unity.modules.audio": "1.0.0",
      "com.unity.modules.director": "1.0.0",
      "com.unity.modules.imageconversion": "1.0.0",
      "com.unity.modules.imgui": "1.0.0",
      "com.unity.modules.jsonserialize": "1.0.0",
      "com.unity.modules.particlesystem": "1.0.0",
      "com.unity.modules.physics": "1.0.0",
      "com.unity.modules.physics2d": "1.0.0",
      "com.unity.modules.screencapture": "1.0.0",
      "com.unity.modules.terrain": "1.0.0",
      "com.unity.modules.tilemap": "1.0.0",
      "com.unity.modules.ui": "1.0.0",
      "com.unity.modules.uielements": "1.0.0",
      "com.unity.modules.umbra": "1.0.0",
      "com.unity.modules.unitywebrequest": "1.0.0",
      "com.unity.modules.video": "1.0.0"
    },
    name: projectName,
    version: "0.0.1",
    unity: UNITY_VERSION,
  };
}

function buildSceneContents({ sceneName, sceneGuid }) {
  return (
    `%YAML 1.1\n` +
    `%TAG !u! tag:unity3d.com,2011:\n` +
    `--- !u!29 &1\n` +
    `OcclusionCullingSettings:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  serializedVersion: 2\n` +
    `  m_OcclusionBakeSettings:\n` +
    `    smallestOccluder: 5\n` +
    `    smallestHole: 0.25\n` +
    `    backfaceThreshold: 100\n` +
    `  m_SceneGUID: 00000000000000000000000000000000\n` +
    `  m_OcclusionCullingData: {fileID: 0}\n` +
    `--- !u!104 &2\n` +
    `RenderSettings:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  serializedVersion: 9\n` +
    `  m_Fog: 0\n` +
    `  m_FogColor: {r: 0.5, g: 0.5, b: 0.5, a: 1}\n` +
    `  m_FogMode: 3\n` +
    `  m_FogDensity: 0.01\n` +
    `  m_LinearFogStart: 0\n` +
    `  m_LinearFogEnd: 300\n` +
    `  m_AmbientSkyColor: {r: 0.212, g: 0.227, b: 0.259, a: 1}\n` +
    `  m_AmbientEquatorColor: {r: 0.114, g: 0.125, b: 0.133, a: 1}\n` +
    `  m_AmbientGroundColor: {r: 0.047, g: 0.043, b: 0.035, a: 1}\n` +
    `  m_AmbientIntensity: 1\n` +
    `  m_AmbientMode: 0\n` +
    `  m_SubtractiveShadowColor: {r: 0.42, g: 0.478, b: 0.627, a: 1}\n` +
    `  m_SkyboxMaterial: {fileID: 10304, guid: 0000000000000000f000000000000000, type: 0}\n` +
    `  m_HaloStrength: 0.5\n` +
    `  m_FlareStrength: 1\n` +
    `  m_FlareFadeSpeed: 3\n` +
    `  m_HaloTexture: {fileID: 0}\n` +
    `  m_SpotCookie: {fileID: 10001, guid: 0000000000000000f000000000000000, type: 0}\n` +
    `  m_DefaultReflectionMode: 0\n` +
    `  m_DefaultReflectionResolution: 128\n` +
    `  m_ReflectionBounces: 1\n` +
    `  m_ReflectionIntensity: 1\n` +
    `  m_CustomReflection: {fileID: 0}\n` +
    `  m_Sun: {fileID: 2002}\n` +
    `  m_IndirectSpecularColor: {r: 0.44657874, g: 0.49641275, b: 0.5748173, a: 1}\n` +
    `  m_UseRadianceAmbientProbe: 0\n` +
    `--- !u!157 &3\n` +
    `LightmapSettings:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  serializedVersion: 12\n` +
    `  m_GIWorkflowMode: 1\n` +
    `  m_GISettings:\n` +
    `    serializedVersion: 2\n` +
    `    m_BounceScale: 1\n` +
    `    m_IndirectOutputScale: 1\n` +
    `    m_AlbedoBoost: 1\n` +
    `    m_TemporalCoherenceThreshold: 1\n` +
    `    m_EnvironmentLightingMode: 0\n` +
    `    m_EnableBakedLightmaps: 1\n` +
    `    m_EnableRealtimeLightmaps: 0\n` +
    `  m_LightmapEditorSettings:\n` +
    `    serializedVersion: 12\n` +
    `    m_Resolution: 2\n` +
    `    m_BakeResolution: 40\n` +
    `    m_AtlasSize: 1024\n` +
    `    m_AO: 0\n` +
    `    m_AOMaxDistance: 1\n` +
    `    m_CompAOExponent: 1\n` +
    `    m_CompAOExponentDirect: 0\n` +
    `    m_Padding: 2\n` +
    `    m_LightmapParameters: {fileID: 0}\n` +
    `    m_LightmapsBakeMode: 1\n` +
    `    m_TextureCompression: 1\n` +
    `    m_FinalGather: 0\n` +
    `    m_FinalGatherRayCount: 1024\n` +
    `    m_ReflectionCompression: 2\n` +
    `    m_MixedBakeMode: 2\n` +
    `    m_BakeBackend: 1\n` +
    `    m_PVRSampling: 1\n` +
    `    m_PVRDirectSampleCount: 32\n` +
    `    m_PVRSampleCount: 512\n` +
    `    m_PVRBounces: 2\n` +
    `    m_PVREnvironmentSampleCount: 256\n` +
    `    m_PVREnvironmentReferencePointCount: 2048\n` +
    `    m_PVRFilteringMode: 1\n` +
    `    m_PVRDenoiserTypeDirect: 1\n` +
    `    m_PVRDenoiserTypeIndirect: 1\n` +
    `    m_PVRDenoiserTypeAO: 1\n` +
    `    m_PVRFilterTypeDirect: 0\n` +
    `    m_PVRFilterTypeIndirect: 0\n` +
    `    m_PVRFilterTypeAO: 0\n` +
    `    m_PVREnvironmentMIS: 1\n` +
    `    m_PVRCulling: 1\n` +
    `    m_PVRFilteringGaussRadiusDirect: 1\n` +
    `    m_PVRFilteringGaussRadiusIndirect: 5\n` +
    `    m_PVRFilteringGaussRadiusAO: 2\n` +
    `    m_PVRFilteringAtrousPositionSigmaDirect: 0.5\n` +
    `    m_PVRFilteringAtrousPositionSigmaIndirect: 2\n` +
    `    m_PVRFilteringAtrousPositionSigmaAO: 1\n` +
    `    m_ExportTrainingData: 0\n` +
    `    m_TrainingDataDestination: TrainingData\n` +
    `    m_LightProbeSampleCountMultiplier: 1\n` +
    `  m_LightingDataAsset: {fileID: 0}\n` +
    `  m_LightingSettings: {fileID: 0}\n` +
    `--- !u!196 &4\n` +
    `NavMeshSettings:\n` +
    `  serializedVersion: 2\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_BuildSettings:\n` +
    `    serializedVersion: 2\n` +
    `    agentTypeID: 0\n` +
    `    agentRadius: 0.5\n` +
    `    agentHeight: 2\n` +
    `    agentSlope: 45\n` +
    `    agentClimb: 0.4\n` +
    `    ledgeDropHeight: 0\n` +
    `    maxJumpAcrossDistance: 0\n` +
    `    minRegionArea: 2\n` +
    `    manualCellSize: 0\n` +
    `    cellSize: 0.16666667\n` +
    `    manualTileSize: 0\n` +
    `    tileSize: 256\n` +
    `    accuratePlacement: 0\n` +
    `    maxJobWorkers: 0\n` +
    `    preserveTilesOutsideBounds: 0\n` +
    `    debug:\n` +
    `      m_Flags: 0\n` +
    `  m_NavMeshData: {fileID: 0}\n` +
    `--- !u!1 &1000\n` +
    `GameObject:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  serializedVersion: 6\n` +
    `  m_Component:\n` +
    `  - component: {fileID: 1001}\n` +
    `  - component: {fileID: 1002}\n` +
    `  - component: {fileID: 1003}\n` +
    `  m_Layer: 0\n` +
    `  m_Name: Main Camera\n` +
    `  m_TagString: MainCamera\n` +
    `  m_Icon: {fileID: 0}\n` +
    `  m_NavMeshLayer: 0\n` +
    `  m_StaticEditorFlags: 0\n` +
    `  m_IsActive: 1\n` +
    `--- !u!4 &1001\n` +
    `Transform:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  m_GameObject: {fileID: 1000}\n` +
    `  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}\n` +
    `  m_LocalPosition: {x: 0, y: 1, z: -10}\n` +
    `  m_LocalScale: {x: 1, y: 1, z: 1}\n` +
    `  m_Children: []\n` +
    `  m_Father: {fileID: 0}\n` +
    `  m_RootOrder: 0\n` +
    `  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}\n` +
    `--- !u!20 &1002\n` +
    `Camera:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  m_GameObject: {fileID: 1000}\n` +
    `  m_Enabled: 1\n` +
    `  serializedVersion: 2\n` +
    `  m_ClearFlags: 1\n` +
    `  m_BackGroundColor: {r: 0.19215687, g: 0.3019608, b: 0.4745098, a: 0}\n` +
    `  m_projectionMatrixMode: 1\n` +
    `  m_SensorSize: {x: 36, y: 24}\n` +
    `  m_LensShift: {x: 0, y: 0}\n` +
    `  m_FocalLength: 50\n` +
    `  m_NormalizedViewPortRect:\n` +
    `    serializedVersion: 2\n` +
    `    x: 0\n` +
    `    y: 0\n` +
    `    width: 1\n` +
    `    height: 1\n` +
    `  near clip plane: 0.3\n` +
    `  far clip plane: 1000\n` +
    `  field of view: 60\n` +
    `  orthographic: 0\n` +
    `  orthographic size: 5\n` +
    `  m_Depth: -1\n` +
    `  m_CullingMask:\n` +
    `    serializedVersion: 2\n` +
    `    m_Bits: 4294967295\n` +
    `  m_RenderingPath: -1\n` +
    `  m_TargetTexture: {fileID: 0}\n` +
    `  m_TargetDisplay: 0\n` +
    `  m_TargetEye: 3\n` +
    `  m_HDR: 1\n` +
    `  m_OcclusionCulling: 1\n` +
    `  m_StereoConvergence: 10\n` +
    `  m_StereoSeparation: 0.022\n` +
    `--- !u!81 &1003\n` +
    `AudioListener:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  m_GameObject: {fileID: 1000}\n` +
    `  m_Enabled: 1\n` +
    `--- !u!1 &2000\n` +
    `GameObject:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  serializedVersion: 6\n` +
    `  m_Component:\n` +
    `  - component: {fileID: 2001}\n` +
    `  - component: {fileID: 2002}\n` +
    `  m_Layer: 0\n` +
    `  m_Name: Directional Light\n` +
    `  m_TagString: Untagged\n` +
    `  m_Icon: {fileID: 0}\n` +
    `  m_NavMeshLayer: 0\n` +
    `  m_StaticEditorFlags: 0\n` +
    `  m_IsActive: 1\n` +
    `--- !u!4 &2001\n` +
    `Transform:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  m_GameObject: {fileID: 2000}\n` +
    `  m_LocalRotation: {x: 0.4082179, y: -0.2345697, z: 0.1093817, w: 0.8754261}\n` +
    `  m_LocalPosition: {x: 0, y: 3, z: 0}\n` +
    `  m_LocalScale: {x: 1, y: 1, z: 1}\n` +
    `  m_Children: []\n` +
    `  m_Father: {fileID: 0}\n` +
    `  m_RootOrder: 1\n` +
    `  m_LocalEulerAnglesHint: {x: 50, y: -30, z: 0}\n` +
    `--- !u!108 &2002\n` +
    `Light:\n` +
    `  m_ObjectHideFlags: 0\n` +
    `  m_CorrespondingSourceObject: {fileID: 0}\n` +
    `  m_PrefabInstance: {fileID: 0}\n` +
    `  m_PrefabAsset: {fileID: 0}\n` +
    `  m_GameObject: {fileID: 2000}\n` +
    `  m_Enabled: 1\n` +
    `  serializedVersion: 10\n` +
    `  m_Type: 1\n` +
    `  m_Shape: 0\n` +
    `  m_Color: {r: 1, g: 0.95686275, b: 0.8392157, a: 1}\n` +
    `  m_Intensity: 1\n` +
    `  m_Range: 10\n` +
    `  m_SpotAngle: 30\n` +
    `  m_InnerSpotAngle: 21.802082\n` +
    `  m_CookieSize: 10\n` +
    `  m_Shadows:\n` +
    `    m_Type: 2\n` +
    `    m_Resolution: -1\n` +
    `    m_CustomResolution: -1\n` +
    `    m_Strength: 1\n` +
    `    m_Bias: 0.05\n` +
    `    m_NormalBias: 0.4\n` +
    `    m_NearPlane: 0.2\n` +
    `  m_Cookie: {fileID: 0}\n` +
    `  m_DrawHalo: 0\n` +
    `  m_Flare: {fileID: 0}\n` +
    `  m_RenderMode: 0\n` +
    `  m_CullingMask:\n` +
    `    serializedVersion: 2\n` +
    `    m_Bits: 4294967295\n` +
    `  m_RenderingLayerMask: 1\n` +
    `  m_Lightmapping: 4\n` +
    `  m_LightShadowCasterMode: 0\n` +
    `  m_AreaSize: {x: 1, y: 1}\n` +
    `  m_BounceIntensity: 1\n` +
    `  m_ColorTemperature: 6570\n` +
    `  m_UseColorTemperature: 0\n` +
    `  m_BoundingSphereOverride: {x: 0, y: 0, z: 0, w: 0}\n` +
    `  m_UseBoundingSphereOverride: 0\n` +
    `  m_ShadowRadius: 0\n` +
    `  m_ShadowAngle: 0\n`
  );
}

function buildDefaultMeta(guid) {
  return (
    `fileFormatVersion: 2\n` +
    `guid: ${guid}\n` +
    `DefaultImporter:\n` +
    `  externalObjects: {}\n` +
    `  userData: \n` +
    `  assetBundleName: \n` +
    `  assetBundleVariant: \n`
  );
}

function buildScriptMeta(guid) {
  return (
    `fileFormatVersion: 2\n` +
    `guid: ${guid}\n` +
    `MonoImporter:\n` +
    `  externalObjects: {}\n` +
    `  serializedVersion: 2\n` +
    `  defaultReferences: []\n` +
    `  executionOrder: 0\n` +
    `  icon: {instanceID: 0}\n` +
    `  userData: \n` +
    `  assetBundleName: \n` +
    `  assetBundleVariant: \n`
  );
}

function generateGuid() {
  return randomUUID().replace(/-/g, "").toLowerCase();
}
