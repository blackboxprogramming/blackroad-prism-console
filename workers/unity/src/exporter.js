import { mkdir, rm } from "fs/promises";
import { createWriteStream } from "fs";
import path from "path";
import archiver from "archiver";

const DEFAULTS = {
  projectName: "BlackRoad Unity Sample",
  sceneName: "MainScene",
  scriptName: "PlayerController",
  description: "Sample Unity project generated by the BlackRoad exporter.",
  author: "BlackRoad",
  projectVersion: "2022.3.29f1",
  namespace: "BlackRoad.Generated",
};

function sanitizeTitle(value, fallback) {
  if (!value) return fallback;
  const trimmed = String(value).trim();
  if (!trimmed) return fallback;
  return trimmed.replace(/\s+/g, " ");
}

function sanitizeFolderName(value, fallback) {
  const base = sanitizeTitle(value, fallback).replace(/[^A-Za-z0-9_-]/g, "-");
  const normalized = base.replace(/-+/g, "-").replace(/^[-_]+|[-_]+$/g, "");
  return normalized || fallback;
}

function toPascalCase(value, fallback) {
  const normalized = sanitizeTitle(value, "")
    .split(/[^A-Za-z0-9]+/)
    .filter(Boolean)
    .map((segment) => segment.charAt(0).toUpperCase() + segment.slice(1))
    .join("");
  const candidate = normalized || fallback;
  return candidate.match(/^[A-Za-z_]/) ? candidate : `_${candidate}`;
}

function sceneTemplate(sceneName) {
  return `
%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!29 &1
SceneSettings:
  m_ObjectHideFlags: 0
  m_PVSData: 
  m_PVSObjectsArray: []
  m_PVSPortalsArray: []
--- !u!104 &2
RenderSettings:
  m_ObjectHideFlags: 0
  serializedVersion: 9
  m_Fog: 0
  m_FogColor: {r: 0.5, g: 0.5, b: 0.5, a: 1}
  m_FogMode: 3
  m_FogDensity: 0.01
  m_LinearFogStart: 0
  m_LinearFogEnd: 300
  m_AmbientSkyColor: {r: 0.212, g: 0.227, b: 0.259, a: 1}
  m_AmbientEquatorColor: {r: 0.114, g: 0.125, b: 0.133, a: 1}
  m_AmbientGroundColor: {r: 0.047, g: 0.043, b: 0.035, a: 1}
  m_AmbientMode: 1
  m_SubtractiveShadowColor: {r: 0.42, g: 0.478, b: 0.627, a: 1}
  m_SkyboxMaterial: {fileID: 0}
  m_HaloStrength: 0.5
  m_FlareStrength: 1
  m_FlareFadeSpeed: 3
  m_HaloTexture: {fileID: 0}
  m_SpotCookie: {fileID: 0}
  m_DefaultReflectionMode: 0
  m_DefaultReflectionResolution: 128
  m_ReflectionBounces: 1
  m_ReflectionIntensity: 1
  m_CustomReflection: {fileID: 0}
  m_Sun: {fileID: 0}
  m_IndirectSpecularColor: {r: 0, g: 0, b: 0, a: 1}
  m_UseRadianceAmbientProbe: 0
--- !u!157 &3
LightmapSettings:
  m_ObjectHideFlags: 0
  serializedVersion: 12
  m_GIWorkflowMode: 1
  m_GISettings:
    serializedVersion: 2
    m_BounceScale: 1
    m_IndirectOutputScale: 1
    m_AlbedoBoost: 1
    m_EnvironmentLightingMode: 0
    m_EnableBakedLightmaps: 1
    m_EnableRealtimeLightmaps: 0
  m_LightmapEditorSettings:
    serializedVersion: 12
    m_Resolution: 2
    m_BakeResolution: 40
    m_AtlasSize: 1024
    m_AO: 0
    m_AOMaxDistance: 1
    m_CompAOExponent: 1
    m_CompAOExponentDirect: 0
    m_Padding: 2
    m_LightmapParameters: {fileID: 0}
    m_LightmapsBakeMode: 1
    m_TextureCompression: 1
    m_ReflectionCompression: 2
    m_MixedBakeMode: 2
    m_BakeBackend: 1
    m_PVRSampling: 1
    m_PVRDirectSampleCount: 32
    m_PVRSampleCount: 512
    m_PVRBounces: 2
    m_PVRFilterTypeDirect: 0
    m_PVRFilterTypeIndirect: 0
    m_PVRFilterTypeAO: 0
    m_PVRFilteringMode: 1
    m_PVRCulling: 1
    m_PVRFilteringGaussRadiusDirect: 1
    m_PVRFilteringGaussRadiusIndirect: 5
    m_PVRFilteringGaussRadiusAO: 2
    m_PVREnvironmentMIS: 1
    m_PVREnvironmentSampleCount: 256
    m_PVREnvironmentReferencePointCount: 2048
    m_PVREnvironmentImportanceSampling: 1
  m_LightingDataAsset: {fileID: 0}
  m_UseShadowmask: 1
--- !u!196 &4
NavMeshSettings:
  m_ObjectHideFlags: 0
  serializedVersion: 2
  m_BuildSettings:
    serializedVersion: 2
    agentTypeID: 0
    agentRadius: 0.5
    agentHeight: 2
    agentSlope: 45
    agentClimb: 0.4
    ledgeDropHeight: 0
    maxJumpAcrossDistance: 0
    minRegionArea: 2
    manualCellSize: 0
    cellSize: 0.16666667
    manualTileSize: 0
    tileSize: 256
    accuratePlacement: 0
    debug:
      m_Flags: 0
  m_NavMeshData: {fileID: 0}
--- !u!1 &1000
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 1001}
  - component: {fileID: 1002}
  - component: {fileID: 1003}
  m_Layer: 0
  m_Name: Main Camera
  m_TagString: MainCamera
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!20 &1001
Camera:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 1000}
  m_Enabled: 1
  serializedVersion: 2
  m_ClearFlags: 1
  m_BackGroundColor: {r: 0.19215687, g: 0.3019608, b: 0.4745098, a: 0}
  m_projectionMatrixMode: 1
  m_GateFitMode: 2
  m_SensorSize: {x: 36, y: 24}
  m_LensShift: {x: 0, y: 0}
  m_FocalLength: 50
  m_NormalizedViewPortRect:
    serializedVersion: 2
    x: 0
    y: 0
    width: 1
    height: 1
  near clip plane: 0.3
  far clip plane: 1000
  field of view: 60
  orthographic: 0
  orthographic size: 5
  m_Depth: 0
  m_CullingMask:
    serializedVersion: 2
    m_Bits: 4294967295
  m_RenderingPath: -1
  m_TargetTexture: {fileID: 0}
  m_TargetDisplay: 0
  m_TargetEye: 3
  m_HDR: 1
  m_AllowMSAA: 1
  m_AllowDynamicResolution: 0
  m_ForceIntoRT: 0
  m_OcclusionCulling: 1
  m_StereoConvergence: 10
  m_StereoSeparation: 0.022
--- !u!81 &1002
AudioListener:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 1000}
  m_Enabled: 1
--- !u!4 &1003
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 1000}
  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
  m_LocalPosition: {x: 0, y: 1, z: -10}
  m_LocalScale: {x: 1, y: 1, z: 1}
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 0
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!1 &2000
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 2001}
  - component: {fileID: 2002}
  m_Layer: 0
  m_Name: Directional Light
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!108 &2001
Light:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 2000}
  m_Enabled: 1
  serializedVersion: 11
  m_Type: 1
  m_Shape: 0
  m_Color: {r: 1, g: 0.95686275, b: 0.8392157, a: 1}
  m_Intensity: 1
  m_Range: 10
  m_SpotAngle: 30
  m_InnerSpotAngle: 21.80208
  m_CookieSize: 10
  m_Shadows:
    m_Type: 2
    m_Resolution: -1
    m_CustomResolution: -1
    m_Strength: 1
    m_Bias: 0.05
    m_NormalBias: 0.4
    m_NearPlane: 0.2
  m_Cookie: {fileID: 0}
  m_DrawHalo: 0
  m_Flare: {fileID: 0}
  m_RenderMode: 0
  m_CullingMask:
    serializedVersion: 2
    m_Bits: 4294967295
  m_Lightmapping: 4
  m_LightShadowCasterMode: 0
  m_AreaSize: {x: 1, y: 1}
  m_BounceIntensity: 1
  m_ColorTemperature: 6570
  m_UseColorTemperature: 0
  m_BoundingSphereOverride: {x: 0, y: 0, z: 0, w: 0}
  m_UseBoundingSphereOverride: 0
  m_ShadowRadius: 0
  m_ShadowAngle: 0
--- !u!4 &2002
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 2000}
  m_LocalRotation: {x: 0.40821788, y: -0.2345697, z: 0.10938163, w: 0.8754261}
  m_LocalPosition: {x: 0, y: 3, z: 0}
  m_LocalScale: {x: 1, y: 1, z: 1}
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 1
  m_LocalEulerAnglesHint: {x: 50, y: -30, z: 0}
--- !u!1 &3000
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 3001}
  - component: {fileID: 3002}
  - component: {fileID: 3003}
  - component: {fileID: 3004}
  m_Layer: 0
  m_Name: Sample Floor
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!4 &3001
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 3000}
  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
  m_LocalPosition: {x: 0, y: -0.5, z: 0}
  m_LocalScale: {x: 10, y: 1, z: 10}
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 2
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!33 &3002
MeshFilter:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 3000}
  m_Mesh: {fileID: 10202, guid: 0000000000000000e000000000000000, type: 0}
--- !u!23 &3003
MeshRenderer:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 3000}
  m_Enabled: 1
  m_CastShadows: 1
  m_ReceiveShadows: 1
  m_DynamicOccludee: 1
  m_StaticShadowCaster: 0
  m_MotionVectors: 1
  m_LightProbeUsage: 1
  m_ReflectionProbeUsage: 1
  m_RayTracingMode: 2
  m_RenderingLayerMask: 1
  m_RendererPriority: 0
  m_Materials:
  - {fileID: 10302, guid: 0000000000000000f000000000000000, type: 0}
  m_StaticBatchInfo:
    firstSubMesh: 0
    subMeshCount: 0
  m_StaticBatchRoot: {fileID: 0}
  m_ProbeAnchor: {fileID: 0}
  m_LightProbeVolumeOverride: {fileID: 0}
  m_ScaleInLightmap: 1
  m_ReceiveGI: 1
  m_PreserveUVs: 0
  m_IgnoreNormalsForChartDetection: 0
  m_ImportantGI: 0
  m_StitchLightmapSeams: 1
  m_SelectedEditorRenderState: 3
  m_MinimumChartSize: 4
  m_AutoUVMaxDistance: 0.5
  m_AutoUVMaxAngle: 89
  m_LightmapParameters: {fileID: 0}
  m_SortingLayerID: 0
  m_SortingLayer: 0
  m_SortingOrder: 0
--- !u!65 &3004
BoxCollider:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 3000}
  m_Material: {fileID: 0}
  m_IsTrigger: 0
  m_Enabled: 1
  serializedVersion: 2
  m_Size: {x: 1, y: 1, z: 1}
  m_Center: {x: 0, y: 0.5, z: 0}
`;
}

function scriptTemplate(namespaceName, className, description) {
  return `// Auto-generated by the BlackRoad Unity exporter.\nusing UnityEngine;\n\nnamespace ${namespaceName}\n{\n    /// <summary>\n    /// ${description}\n    /// </summary>\n    public class ${className} : MonoBehaviour\n    {\n        [SerializeField]\n        private float moveSpeed = 3.5f;\n\n        [SerializeField]\n        private float turnSpeed = 120f;\n\n        private void Update()\n        {\n            Vector3 input = new Vector3(Input.GetAxis(\"Horizontal\"), 0f, Input.GetAxis(\"Vertical\"));\n            if (input.sqrMagnitude > 1f)\n            {\n                input.Normalize();\n            }\n\n            transform.Translate(input * moveSpeed * Time.deltaTime, Space.World);\n\n            if (input.sqrMagnitude > 0.0001f)\n            {\n                Quaternion targetRotation = Quaternion.LookRotation(input, Vector3.up);\n                transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRotation, turnSpeed * Time.deltaTime);\n            }\n        }\n    }\n}\n`;
}

function projectSettingsTemplate(projectName) {
  return `%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!129 &1\nPlayerSettings:\n  m_ObjectHideFlags: 0\n  serializedVersion: 25\n  companyName: BlackRoad\n  productName: ${projectName}\n  defaultScreenWidth: 1920\n  defaultScreenHeight: 1080\n  defaultScreenWidthWeb: 960\n  defaultScreenHeightWeb: 600\n  runInBackground: 1\n  displayResolutionDialog: 0\n  fullscreenMode: 1\n  defaultIsFullScreen: 1\n  captureSingleScreen: 0\n  forceSingleInstance: 0\n  useFlipModelSwapchain: 1\n  resizableWindow: 1\n  allowFullscreenSwitch: 1\n  visibleInBackground: 1\n  allowHDR: 1\n  graphicsJobs: 1\n  gpuSkinning: 1\n  scriptingRuntimeVersion: 1\n  activeColorSpace: 1\n  m_SupportedAspectRatios:\n    4:3: 1\n    5:4: 1\n    16:9: 1\n    16:10: 1\n    21:9: 1\n  bundleVersion: 0.1.0\n  preloadedAssets: []\n`;
}

function manifestTemplate() {
  const manifest = {
    dependencies: {
      "com.unity.ai.navigation": "1.1.5",
      "com.unity.cinemachine": "2.9.7",
      "com.unity.test-framework": "1.1.33",
      "com.unity.textmeshpro": "3.0.6",
      "com.unity.timeline": "1.7.5",
      "com.unity.ugui": "1.0.0",
      "com.unity.modules.ai": "1.0.0",
      "com.unity.modules.animation": "1.0.0",
      "com.unity.modules.audio": "1.0.0",
      "com.unity.modules.physics": "1.0.0",
      "com.unity.modules.unityanalytics": "1.0.0"
    }
  };
  return `${JSON.stringify(manifest, null, 2)}\n`;
}

function readmeTemplate({ projectName, description, author, sceneName, scriptName, generatedAt }) {
  return `# ${projectName}\n\n${description}\n\n- **Author:** ${author}\n- **Generated:** ${generatedAt}\n- **Primary Scene:** Assets/Scenes/${sceneName}.unity\n- **Sample Script:** Assets/Scripts/${scriptName}.cs\n\n## Getting Started\n1. Open Unity Hub and choose **Open**.\n2. Select this exported folder.\n3. When the project loads, open the \`${sceneName}\` scene and press Play.\n4. Attach \`${scriptName}\` to a GameObject to explore the sample movement logic.\n\n## Next Steps\n- Replace placeholder meshes and materials with project assets.\n- Wire gameplay systems or networking based on your needs.\n- Commit the generated project to source control to collaborate with the team.\n`;
}

export async function exportUnityProject(options = {}) {
  const {
    projectName: requestedProjectName,
    sceneName: requestedSceneName,
    scriptName: requestedScriptName,
    description = DEFAULTS.description,
    author = DEFAULTS.author,
    projectVersion = DEFAULTS.projectVersion,
    namespace = DEFAULTS.namespace,
    outputDir = path.join(process.cwd(), "downloads"),
    zipFileName = "unity-project.zip",
  } = options;

  const projectName = sanitizeTitle(requestedProjectName, DEFAULTS.projectName);
  const sceneName = toPascalCase(requestedSceneName, DEFAULTS.sceneName);
  const scriptClassName = toPascalCase(
    requestedScriptName || requestedSceneName,
    DEFAULTS.scriptName
  );
  const projectFolder = sanitizeFolderName(projectName, "BlackRoadUnityProject");
  const generatedAt = new Date().toISOString();

  await mkdir(outputDir, { recursive: true });
  const zipPath = path.join(outputDir, zipFileName);
  await rm(zipPath, { force: true });

  const archive = archiver("zip", { zlib: { level: 9 } });
  const outputStream = createWriteStream(zipPath);
  archive.pipe(outputStream);

  const recordedFiles = [];
  const record = (relativePath) => recordedFiles.push(relativePath.replace(/\\/g, "/"));
  const addFile = (relativePath, contents) => {
    const normalized = path.join(projectFolder, relativePath).replace(/\\/g, "/");
    archive.append(contents, { name: normalized });
    record(relativePath);
  };

  addFile(
    "README.md",
    readmeTemplate({
      projectName,
      description,
      author,
      sceneName,
      scriptName: scriptClassName,
      generatedAt,
    })
  );
  addFile("ProjectSettings/ProjectVersion.txt", `m_EditorVersion: ${projectVersion}\nm_EditorVersionWithRevision: ${projectVersion} (blackroad)\n`);
  addFile("ProjectSettings/ProjectSettings.asset", projectSettingsTemplate(projectName));
  addFile("Packages/manifest.json", manifestTemplate());
  addFile(
    "BlackRoad/export.json",
    `${JSON.stringify(
      {
        projectName,
        author,
        description,
        sceneName,
        script: scriptClassName,
        namespace,
        projectVersion,
        generatedAt,
      },
      null,
      2
    )}\n`
  );
  addFile(
    `Assets/Scripts/${scriptClassName}.cs`,
    scriptTemplate(namespace, scriptClassName, description)
  );
  addFile(`Assets/Scenes/${sceneName}.unity`, sceneTemplate(sceneName));

  const finalizePromise = new Promise((resolve, reject) => {
    outputStream.on("close", () => resolve(archive.pointer()));
    outputStream.on("error", reject);
    archive.on("error", reject);
  });

  await archive.finalize();
  const bytes = await finalizePromise;

  return {
    zipPath,
    projectFolder,
    bytes,
    files: recordedFiles,
    metadata: {
      projectName,
      sceneName,
      scriptName: scriptClassName,
      projectVersion,
      author,
      generatedAt,
    },
  };
}
