{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://blackroad.io/schemas/p_vs_np_research_intake.schema.json",
  "title": "P vs NP Research Intake",
  "description": "Structured intake form for P vs NP complexity research using Prism mathematical agents",
  "type": "object",
  "required": ["researcher_id", "claim_type", "core_insight", "timestamp"],
  "properties": {
    "researcher_id": {
      "type": "string",
      "description": "Unique identifier for researcher (e.g., CECILIA-7C3E-SPECTRUM-9B4F)"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of intake submission"
    },
    "claim_type": {
      "type": "string",
      "enum": [
        "polynomial_algorithm_for_SAT",
        "impossibility_proof",
        "barrier_result",
        "oracle_separation",
        "complexity_class_collapse",
        "other"
      ],
      "description": "Type of claim being made about P vs NP"
    },
    "claim_type_other": {
      "type": "string",
      "description": "If claim_type is 'other', specify here"
    },
    "core_insight": {
      "type": "object",
      "required": ["summary", "key_observation"],
      "properties": {
        "summary": {
          "type": "string",
          "maxLength": 500,
          "description": "Core mathematical insight in â‰¤5 sentences"
        },
        "key_observation": {
          "type": "string",
          "description": "The central mathematical observation that drives the approach"
        },
        "connection_to_existing_work": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "References to existing results this builds upon"
        }
      }
    },
    "main_construction": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the main mathematical construction or reduction"
        },
        "formal_definition": {
          "type": "string",
          "description": "Formal mathematical definition (LaTeX format accepted)"
        },
        "algorithm_pseudocode": {
          "type": "string",
          "description": "If algorithmic approach, provide pseudocode"
        },
        "circuit_construction": {
          "type": "object",
          "properties": {
            "depth": {
              "type": "string",
              "description": "Circuit depth bound"
            },
            "size": {
              "type": "string",
              "description": "Circuit size bound"
            },
            "gate_types": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "proof_bite_point": {
      "type": "object",
      "required": ["description"],
      "properties": {
        "description": {
          "type": "string",
          "description": "The nontrivial step where the proof succeeds or fails"
        },
        "difficulty_assessment": {
          "type": "string",
          "enum": ["straightforward", "moderate", "hard", "extremely_hard"],
          "description": "Honest assessment of difficulty"
        },
        "verification_strategy": {
          "type": "string",
          "description": "How this step can be verified or validated"
        }
      }
    },
    "barriers_addressed": {
      "type": "object",
      "properties": {
        "relativization": {
          "type": "object",
          "properties": {
            "addressed": {
              "type": "boolean"
            },
            "how": {
              "type": "string",
              "description": "How the relativization barrier is overcome"
            }
          }
        },
        "natural_proofs": {
          "type": "object",
          "properties": {
            "addressed": {
              "type": "boolean"
            },
            "how": {
              "type": "string",
              "description": "How the natural proofs barrier is overcome"
            }
          }
        },
        "algebrization": {
          "type": "object",
          "properties": {
            "addressed": {
              "type": "boolean"
            },
            "how": {
              "type": "string",
              "description": "How the algebrization barrier is overcome"
            }
          }
        }
      }
    },
    "counter_pressure": {
      "type": "object",
      "properties": {
        "polynomial_hierarchy_implications": {
          "type": "string",
          "description": "What happens to PH if this result holds?"
        },
        "cryptography_implications": {
          "type": "string",
          "description": "Impact on cryptographic assumptions"
        },
        "circuit_lower_bounds": {
          "type": "string",
          "description": "Implications for circuit complexity"
        },
        "potential_contradictions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Known results that might contradict this approach"
        }
      }
    },
    "confidence_level": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Researcher's confidence level (0.0 to 1.0)"
    },
    "agent_assignments": {
      "type": "object",
      "description": "Which Prism agents should work on this",
      "properties": {
        "primary_agents": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["math", "geometry", "godel", "infinity", "logic"]
          },
          "description": "Primary agents for this problem"
        },
        "validation_agents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Agents for validation and contradiction checking"
        }
      }
    },
    "prism_execution_plan": {
      "type": "object",
      "properties": {
        "phases": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "phase_name": {
                "type": "string"
              },
              "agent": {
                "type": "string"
              },
              "task": {
                "type": "string"
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "type": "string",
      "enum": [
        "intake",
        "agent_processing",
        "validation",
        "contradiction_found",
        "proof_complete",
        "needs_revision",
        "abandoned"
      ],
      "default": "intake"
    },
    "agent_logs": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "agent": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "event": {
            "type": "string"
          },
          "output": {
            "type": "object"
          }
        }
      }
    },
    "contradictions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "detected_by": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "severity": {
            "type": "string",
            "enum": ["fatal", "major", "minor", "resolved"]
          },
          "resolution": {
            "type": "string"
          }
        }
      }
    }
  }
}
