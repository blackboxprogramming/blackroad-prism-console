# ============================================================
#  Codex Automation Configuration
#  File: .codex/config.yml
# ============================================================

version: 1
description: >
  Codex orchestration for BlackRoad Prism Console.
  Handles web deployment to the shellfish-droplet and
  automated Hugging Face model publishing.

env:
  DROPLET_HOST: root@174.138.44.45
  DROPLET_PATH: /srv/blackroad-site
  GIT_BRANCH: main
  HF_ORG: blackroad
  HF_TOKEN: ${{ secrets.HF_TOKEN }}
  DOCKER_COMPOSE_FILE: docker-compose.prod.yml
  MODEL_LIST: prs-200.csv

# ------------------------------------------------------------
#  EVENT TRIGGERS
# ------------------------------------------------------------
triggers:
  - on: push
    branches: [main]
    actions:
      - deploy-droplet
      - publish-hf-models

  - on: workflow_dispatch
    actions:
      - deploy-droplet
      - publish-hf-models

# ------------------------------------------------------------
#  TASKS
# ------------------------------------------------------------
tasks:
  deploy-droplet:
    name: Deploy site to shellfish-droplet
    steps:
      - name: SSH into droplet and pull latest
        run: |
          ssh -o StrictHostKeyChecking=no $DROPLET_HOST <<'EOF'
            cd $DROPLET_PATH
            git pull origin $GIT_BRANCH
            docker compose -f $DOCKER_COMPOSE_FILE up -d --build
            systemctl reload caddy || true
            echo "✅ Deployment complete on $DROPLET_HOST"
          EOF

  publish-hf-models:
    name: Publish all Hugging Face models
    steps:
      - name: Prepare list of models
        run: |
          echo "Parsing model list from $MODEL_LIST"
          MODELS=$(awk -F, '/^hf-/ {print $2}' $MODEL_LIST)
          for MODEL in $MODELS; do
            gh workflow run publish-to-hf.yml \
              -f repo_id=$HF_ORG/${MODEL##*/} \
              -f source_dir=models/${MODEL##*/} \
              -f private=false
          done
          echo "✅ Hugging Face publication triggered."

# ------------------------------------------------------------
#  LOGGING & MONITORING
# ------------------------------------------------------------
logging:
  level: info
  output: codex/logs/codex.log
  notify:
    slack_webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
    on_failure: true
    on_success: false

# ------------------------------------------------------------
#  CLEANUP & MAINTENANCE
# ------------------------------------------------------------
maintenance:
  cron: "0 3 * * *"     # nightly 3 AM UTC
  actions:
    - name: Prune Docker images and restart PM2
      run: |
        ssh -o StrictHostKeyChecking=no $DROPLET_HOST <<'EOF'
          docker system prune -af
          pm2 resurrect || true
        EOF
