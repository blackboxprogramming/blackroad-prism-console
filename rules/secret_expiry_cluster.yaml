rule_id: SECRET_EXPIRY_CLUSTER
id: SECRET_EXPIRY_CLUSTER
name: Secret expiry cluster
description: Cluster secret-expired errors to trigger automated rotation.
category: observe
name: Secret expiry clustering
mode: observe
severity: high
owners:
  - "@platform-secrets"
  - "secrets@company.com"
docs_url: https://your.docs/policies/secret_expiry_cluster
id: SECRET_EXPIRY_CLUSTER
mode: observe
severity: high
metadata:
  product: Secret Hygiene
  description: Cluster secret-expired errors to trigger automated rotation.
expr: rate(error_kind == "secret_expired", "10m") >= 0.3
on_match:
  decision: notify
  reason: secret_expiry_cluster
  details:
    message: Multiple secret expirations detected within 10 minutes.
    remediation: Trigger automated rotation for affected secrets and investigate upstream causes.
notify:
  channels:
    - "#secops"
    - "#platform-alerts"
tests:
  - name: ok_fixture
    fixture: secret/ok.series.json
    want: false
  - name: burst_fixture
    fixture: secret/burst.series.json
    want: true
    expect_details:
      captures:
        rate:
          - secret_ids: ["hash_2f9c", "hash_9a"]
  - name: inline_single
    window: "10m"
    series:
      - { error_kind: "secret_expired", secret_id: "hash_x" }
      - repeat: 5
    want: false
rule_id: "SECRET_EXPIRY_CLUSTER-5c2a246a-0e6f-4a9c-bc8e-3b8c12f8b5d4"
name: "Burst of secret-expired errors"
category: "observe"
severity: "high"
version: 1
description: >
  Detects clusters of secret/token expiry errors within 10 minutes.
inputs_schema:
  - name: error_kind    # string
  - name: secret_id     # string (hashed)
  - name: ts            # timestamp
output_type: "json"
expr: |
  rate(error_kind == "secret_expired", "10m") >= 3
on_match:
  decision: "notify"
  reason: "secret_expired_cluster"
  details:
    message: "Multiple secret expirations detected; rotate or unstick broker."
    remediation: "Run rotation workflow; mark affected tools as degraded."
notify:
  channels: ["slack:#secops"]
tests:
  - name: "single_expiry_ok"
    guid: "4b3a6c7d-9f2e-4d81-9f32-6b5e2a1c9f01"
    series:
      window: "10m"
      events:
        - {error_kind: "secret_expired", secret_id: "hash_a"}
    want: {decision: "allow", reason: ""}
  - name: "burst_trips"
    guid: "c1a4d0e2-7e3a-4d2c-9e2a-0a4f3b2c6d8e"
    series:
      window: "10m"
      events:
        - {error_kind: "secret_expired", secret_id: "hash_a"}
        - {error_kind: "secret_expired", secret_id: "hash_b"}
        - {error_kind: "secret_expired", secret_id: "hash_c"}
    want: {decision: "notify", reason: "secret_expired_cluster"}
comments:
  - "If upstream emits token_expired vs secret_expired, normalize in the mapper."
