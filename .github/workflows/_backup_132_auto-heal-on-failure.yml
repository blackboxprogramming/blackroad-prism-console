name: Auto-Heal on Failure
on:
  workflow_run:
    workflows:
      [
        'Deploy blackroad.io (Pages, main)',
        'Monorepo Matrix',
        'Super-Linter (flag-aware)',
        'E2E — Playwright (routes + screenshots from sitemap)',
        'Snyk Scan (advisory)',
        'OSSF Scorecard',
      ]
    types: [completed]
permissions:
  contents: write
  issues: write
  actions: write
jobs:
  heal:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Gather failure context
        id: ctx
        run: |
          echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          echo "name=${{ github.event.workflow_run.name }}" >> $GITHUB_OUTPUT
      - name: Open triage issue (or append)
        uses: actions/github-script@v7
        with:
          script: |
            const runId = "${{ steps.ctx.outputs.run_id }}";
            const wfName = `${{ steps.ctx.outputs.name }}`;
            const title = `Auto-Heal: ${wfName} failed (run ${runId})`;
            const body = `A monitored workflow failed.\n\n- Workflow: **${wfName}**\n- Run ID: ${runId}\n\nTriggering AI fix workflow…`;
            const {data: existing} = await github.search.issuesAndPullRequests({ q: `repo:${context.repo.owner}/${context.repo.repo} "${title}" in:title state:open` });
            if (existing.items.length) {
              await github.issues.createComment({owner: context.repo.owner, repo: context.repo.repo, issue_number: existing.items[0].number, body});
            } else {
              await github.issues.create({owner: context.repo.owner, repo: context.repo.repo, title, body, labels:['auto-heal','ci']});
            }
      - name: Dispatch AI fix
        uses: actions/github-script@v7
        with:
          script: |
            await github.actions.createWorkflowDispatch({
              owner: context.repo.owner, repo: context.repo.repo,
              workflow_id: 'codex-fix.yml',
              ref: context.payload.repository.default_branch,
              inputs: { prompt_file: '.github/prompts/codex-fix-anything.md', branch: `auto-heal/${Date.now()}` }
            });
