name: prism-ci

on:
  push:
    paths:
      - 'prism/**'
      - '.github/workflows/prism-ci.yml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - 'prism/**'
      - '.github/workflows/prism-ci.yml'

permissions:
  contents: read
  checks: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: >-
      !(
        github.event_name == 'push' &&
        contains(github.event.head_commit.message, '[skip ci]')
      ) &&
      (github.event_name != 'pull_request' || github.event.pull_request.draft == false)
    timeout-minutes: 45
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            prism/server/package-lock.json
      - run: npm --prefix prism/server ci
      - run: npm --prefix prism/server run lint
      - run: npm --prefix prism/server test -- --coverage
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'
          cache-dependency-path: |
            requirements-dev.txt
            requirements.txt
      - run: pip install -r requirements-dev.txt
      - run: pytest --junitxml=junit-prism-python.xml tests/prism
      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: |
            **/junit-*.xml
      - uses: codecov/codecov-action@v4
        with:
          files: prism/server/coverage/coverage-final.json
      - run: docker build -t ghcr.io/blackroad/prism:${{ github.sha }} prism
      - if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - if: github.ref == 'refs/heads/main'
        run: docker push ghcr.io/blackroad/prism:${{ github.sha }}
