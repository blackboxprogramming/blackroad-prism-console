name: Deploy blackroad.io â€” Channel (Pages + optional providers)
on:
  workflow_dispatch:
    inputs:
      channel:
        description: "Channel: canary | beta | prod"
        required: true
        default: "canary"
      provider:
        description: "Optional provider: pages | vercel | cloudflare | netlify | all"
        required: false
        default: "all"
      ref:
        description: "Git ref/sha to deploy (for rollback). Leave empty to use default branch."
        required: false
        default: ""
        description: 'Channel: canary | beta | prod'
        required: true
        default: 'canary'
      provider:
        description: 'Optional provider: pages | vercel | cloudflare | netlify | all'
        required: false
        default: 'all'
      ref:
        description: 'Git ref/sha to deploy (for rollback). Leave empty to use default branch.'
        required: false
        default: ''
        description: "Channel: canary | beta | prod"
        required: true
        default: "canary"
      provider:
        description: "Optional provider: pages | vercel | cloudflare | netlify | all"
        required: false
        default: "all"
      ref:
        description: "Git ref/sha to deploy (for rollback). Leave empty to use default branch."
        required: false
        default: ""
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
        with:
          node-version: 20
        with: { node-version: 20 }
        with:
          node-version: 20
      - name: Install & Build
        run: |
          cd sites/blackroad
          npm ci --omit=optional || npm i --package-lock-only
          export VITE_CHANNEL="${{ github.event.inputs.channel }}"
          echo "$VITE_CHANNEL" > public/_env
          npm run build
          cp -f public/_env dist/_env || echo "${{ github.event.inputs.channel }}" > dist/_env
          cp dist/index.html dist/404.html
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with: { path: sites/blackroad/dist }
        with:
          path: sites/blackroad/dist
        with: { path: sites/blackroad/dist }
        with:
          path: sites/blackroad/dist
      - name: Upload dist snapshot (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.event.inputs.channel }}-${{ github.sha }}
          path: sites/blackroad/dist/**
  deploy_pages:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ inputs.provider == 'all' || inputs.provider == 'pages' }}
    environment: github-pages
    steps:
      - uses: actions/deploy-pages@v4
  deploy_vercel:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ (inputs.provider == 'all' || inputs.provider == 'vercel') && secrets.VERCEL_TOKEN != '' && secrets.VERCEL_ORG_ID != '' && secrets.VERCEL_PROJECT_ID != '' }}
    steps:
      - uses: actions/checkout@v4
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Deploy to Vercel (channel alias)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm i -g vercel@latest
          cd sites/blackroad
          vercel pull --yes --environment=production --token "$VERCEL_TOKEN"
          url=$(vercel deploy dist --prebuilt --token "$VERCEL_TOKEN" --confirm)
          chan="${{ inputs.channel }}"
          if [ -n "$chan" ]; then vercel alias set "$url" "blackroad-${chan}" --token "$VERCEL_TOKEN" || true; fi
          echo "VERCEL_URL=$url" >> $GITHUB_ENV
  deploy_cloudflare:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ (inputs.provider == 'all' || inputs.provider == 'cloudflare') && secrets.CF_API_TOKEN != '' && secrets.CF_ACCOUNT_ID != '' && vars.CF_PAGES_PROJECT != '' }}
    steps:
      - uses: actions/checkout@v4
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
      - name: Deploy to Cloudflare Pages
        id: cf
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ vars.CF_PAGES_PROJECT }}
          directory: sites/blackroad/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
  deploy_netlify:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ (inputs.provider == 'all' || inputs.provider == 'netlify') && secrets.NETLIFY_AUTH_TOKEN != '' && secrets.NETLIFY_SITE_ID != '' }}
    steps:
      - uses: actions/checkout@v4
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
        with: { ref: ${{ github.event.inputs.ref || github.ref }} }
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Deploy to Netlify (channel)
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          npm i -g netlify-cli@latest
          out=$(netlify deploy --dir "sites/blackroad/dist" --prodIfUnlocked --message "channel:${{ inputs.channel }}" || netlify deploy --dir "sites/blackroad/dist")
          echo "$out"
      - name: Record deploy (deploys.json)
        if: always()
        run: node .github/tools/deploy-history.js "${{ inputs.channel }}" "${{ github.sha }}" "${{ github.event.inputs.ref || '' }}"
      - name: Commit deploy history
        if: always()
        env: { GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }} }
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }}
        env: { GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }} }
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }}
        run: |
          git add sites/blackroad/public/deploys.json || true
          git diff --staged --quiet || (git config user.name  "${{ secrets.BOT_USER || 'blackroad-bot' }}"; git config user.email "${{ secrets.BOT_USER || 'blackroad-bot' }}@users.noreply.github.com"; git commit -m "chore(deploy): record ${{ inputs.channel }} @ ${{ github.sha }}"; git push || true)
