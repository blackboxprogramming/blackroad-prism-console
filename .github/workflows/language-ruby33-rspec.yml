name: Ruby 3.3 • RSpec

on:
  push:
    branches:
      - main
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Ruby 3.3 • RSpec
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
          bundler-cache: true

      - name: Run RSpec
        shell: bash
        run: |
          HAS_BUNDLE=0
          if find . -maxdepth 1 \( -name 'Gemfile' -o -name '*.gemspec' \) -print -quit | grep -q .; then
            HAS_BUNDLE=1
          fi

          if [ "$HAS_BUNDLE" -eq 0 ] && ! command -v rspec >/dev/null 2>&1; then
            echo "No Ruby project detected. Skipping."
            exit 0
          fi

          mkdir -p reports/junit

          if [ "$HAS_BUNDLE" -eq 1 ]; then
            RSPEC_CMD="bundle exec rspec"
            RUBY_CMD="bundle exec ruby"
          else
            RSPEC_CMD="rspec"
            RUBY_CMD="ruby"
          fi

          if ! $RUBY_CMD -e "begin; require 'rspec'; rescue LoadError; exit 1; end" >/dev/null 2>&1; then
            echo "RSpec gem not available. Skipping."
            exit 0
          fi

          if $RUBY_CMD -e "begin; require 'rspec_junit_formatter'; rescue LoadError; exit 1; end" >/dev/null 2>&1; then
            $RSPEC_CMD --format progress --format RspecJunitFormatter --out reports/junit/rspec.xml
          else
            echo "rspec_junit_formatter not found; running without junit formatter."
            $RSPEC_CMD --format documentation
          fi

      - name: Upload RSpec artifacts on failure
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ruby33-rspec-reports
          path: reports
          if-no-files-found: ignore
