name: ChatOps: Rollback deploy
on: { issue_comment: { types: [created] } }
permissions: { actions: write, contents: read, pull-requests: write }
jobs:
  rollback:
    if: startsWith(github.event.comment.body, '/rollback blackroad ')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: parse
        run: |
          raw="${{ github.event.comment.body }}"
          # /rollback blackroad <channel> [steps] [provider]
          chan=$(echo "$raw" | awk '{print $3}')
          steps=$(echo "$raw" | awk '{print $4}')
          prov=$(echo "$raw" | awk '{print $5}')
          echo "chan=${chan}" >> $GITHUB_OUTPUT
          echo "steps=${steps:-1}" >> $GITHUB_OUTPUT
          echo "provider=${prov:-pages}" >> $GITHUB_OUTPUT
      - id: pick
        run: |
          file="sites/blackroad/public/deploys.json"
          if [ ! -f "$file" ]; then echo "No deploy history."; echo "sha=" >> $GITHUB_OUTPUT; exit 0; fi
          chan="${{ steps.parse.outputs.chan }}"
          idx=$(( ${{ steps.parse.outputs.steps }} ))
          sha=$(node -e "const j=require('./$file'); const arr=(j.channels && j.channels['$chan'])||[]; console.log(arr[$idx]?arr[$idx].sha:'');")
          echo "sha=$sha" >> $GITHUB_OUTPUT
      - uses: actions/github-script@v7
        if: steps.pick.outputs.sha != ''
        with:
          script: |
            await github.actions.createWorkflowDispatch({
              owner: context.repo.owner, repo: context.repo.repo,
              workflow_id: 'deploy-blackroad-channel.yml',
              ref: context.payload.repository.default_branch,
              inputs: { channel: '${{ steps.parse.outputs.chan }}', provider: '${{ steps.parse.outputs.provider }}', ref: '${{ steps.pick.outputs.sha }}' }
            });
            await github.issues.createComment({owner: context.repo.owner, repo: context.repo.repo, issue_number: context.payload.issue.number, body:`‚è™ Rollback dispatched for **${{ steps.parse.outputs.chan }}** to \`${{ steps.pick.outputs.sha }}\` (provider: **${{ steps.parse.outputs.provider }}**)`});
      - uses: actions/github-script@v7
        if: steps.pick.outputs.sha == ''
        with:
          script: |
            await github.issues.createComment({owner: context.repo.owner, repo: context.repo.repo, issue_number: context.payload.issue.number, body:`No deploy history available for that channel.`});
