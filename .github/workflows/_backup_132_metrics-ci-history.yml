name: Metrics: Collect CI History
on:
  schedule: [ { cron: "13 * * * *" } ] # hourly
  workflow_dispatch:
permissions: { contents: write }
jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with: { fetch-depth: 0 }
      - name: Build CI history JSON
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs'); const path = require('path');
            const owner = context.repo.owner, repo = context.repo.repo;
            const wanted = new Set([
              'Deploy blackroad.io (Pages, main)',
              'Monorepo Matrix',
              'Super-Linter (flag-aware)',
              'AI Sweeper (periodic)',
              'Auto-Heal on Failure'
            ]);
            const { data: wfs } = await github.actions.listRepoWorkflows({ owner, repo, per_page: 100 });
            const pick = wfs.workflows.filter(w => wanted.has(w.name));
            const out = [];
            for (const wf of pick) {
              const runs = await github.actions.listWorkflowRuns({ owner, repo, workflow_id: wf.id, per_page: 50 });
              for (const r of runs.data.workflow_runs) {
                const started = Date.parse(r.run_started_at || r.created_at);
                const updated = Date.parse(r.updated_at || r.run_started_at || r.created_at);
                out.push({
                  wf: wf.name,
                  id: r.id,
                  sha: r.head_sha,
                  event: r.event,
                  status: r.status,
                  conclusion: r.conclusion,
                  started_at: r.run_started_at,
                  updated_at: r.updated_at,
                  duration_ms: Math.max(0, updated - started)
                });
              }
            }
            out.sort((a,b)=> (a.updated_at||'').localeCompare(b.updated_at||''));
            const payload = { ts: new Date().toISOString(), runs: out.slice(-300) };
            const file = path.join(process.cwd(), 'sites','blackroad','public','metrics','ci.json');
            fs.mkdirSync(path.dirname(file), { recursive: true });
            fs.writeFileSync(file, JSON.stringify(payload,null,2));
      - name: Commit metrics (if changed)
        env: { GITHUB_TOKEN: ${{ secrets.BOT_TOKEN || secrets.GITHUB_TOKEN }} }
        run: |
          git add sites/blackroad/public/metrics/ci.json
          git diff --staged --quiet || (git config user.name "${{ secrets.BOT_USER || 'blackroad-bot' }}"; git config user.email "${{ secrets.BOT_USER || 'blackroad-bot' }}@users.noreply.github.com"; git commit -m "metrics(ci): update history"; git push)
