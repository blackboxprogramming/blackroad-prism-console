name: Auto-merge safe PRs
on:
  pull_request:
    types: [labeled, opened, synchronize]
permissions:
  pull-requests: write
  contents: write
jobs:
  automerge:
    runs-on: ubuntu-latest
name: Auto-Merge (label-driven)
on:
  pull_request:
    types: [labeled, synchronize, opened, reopened]
  check_suite:
    types: [completed]
permissions:
  contents: write
  pull-requests: write
jobs:
  merge:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'check_suite' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'automerge'))
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const {owner,repo} = context.repo;
            const pr = context.payload.pull_request || (await github.search.issuesAndPullRequests({q:`repo:${owner}/${repo} is:pr is:open label:automerge` })).data.items[0];
            if (!pr) return;
            const num = pr.number || pr;
            const checks = await github.checks.listForRef({owner,repo,ref: pr.head.sha});
            const allGreen = checks.data.check_runs.every(c=>['success','skipped','neutral'].includes(c.conclusion||''));
            if (!allGreen) return;
            try { await github.pulls.merge({owner,repo,pull_number:num,merge_method:'squash'}); } catch(e){}
            const pr = context.payload.pull_request || (context.payload.check_suite && context.payload.check_suite.pull_requests && context.payload.check_suite.pull_requests[0]);
            if (!pr) { core.notice('No PR context.'); return; }
            const {owner, repo} = context.repo;
            const number = pr.number;
            // Get combined status
            const headSha = pr.head.sha;
            const { data: comb } = await github.repos.getCombinedStatusForRef({ owner, repo, ref: headSha });
            const contextsOk = comb.state === 'success';
            // Require the label 'automerge'
            const { data: prFull } = await github.pulls.get({ owner, repo, pull_number: number });
            const hasLabel = prFull.labels.some(l => l.name === 'automerge');
            if (!hasLabel) { core.notice('No automerge label.'); return; }
            if (!contextsOk) { core.notice('Checks not successful yet.'); return; }
            try {
              await github.pulls.merge({ owner, repo, pull_number: number, merge_method: 'squash' });
              await github.issues.createComment({ owner, repo, issue_number: number, body: "âœ… Auto-merged (checks green + label present)." });
            } catch (e) {
              core.notice('Merge attempt skipped: ' + (e.message || e));
            }
    if: contains(github.event.pull_request.labels.*.name, 'automerge') || contains(github.event.pull_request.labels.*.name, 'docs')
    steps:
      - uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_METHOD: squash
          MERGE_DELETE_BRANCH: true
          UPDATE_METHOD: rebase
