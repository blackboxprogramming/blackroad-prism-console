name: main-automation-orchestrator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1-5'

permissions:
  contents: read

concurrency:
  group: main-automation-orchestrator-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint suite
    uses: ./.github/workflows/lint.yml
    permissions:
      contents: read

  web-ci:
    name: Prism console web pipeline
    needs: lint
    uses: ./.github/workflows/ci.yml
    secrets:
      vercel-token: ${{ secrets.VERCEL_TOKEN }}
      vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

  cli:
    name: CLI validation
    needs: web-ci
    uses: ./.github/workflows/cli-validation.yml

  status-report:
    name: Automation status report
    needs: [lint, web-ci, cli]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ORCHESTRATOR_TOKEN || github.token }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: python -m pip install --upgrade pip pyyaml

      - name: Generate automation status report
        run: python tools/workflows/generate_status.py --output AUTOMATION_STATUS.md

      - name: Commit automation report
        if: github.ref == 'refs/heads/main'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: refresh automation status report"
          file_pattern: AUTOMATION_STATUS.md

  telemetry:
    name: Telemetry and notifications
    needs: status-report
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Emit BlackRoad telemetry dispatch
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TELEMETRY_TOKEN || github.token }}
          script: |
            const payload = {
              orchestrator: '${{ github.workflow }}',
              run_id: ${{ github.run_id }},
              run_url: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              lint_status: '${{ needs.lint.result }}',
              web_status: '${{ needs.web-ci.result }}',
              cli_status: '${{ needs.cli.result }}',
              sha: '${{ github.sha }}',
              ref: '${{ github.ref }}',
              actor: '${{ github.actor }}'
            };
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'blackroad-telemetry',
              client_payload: payload,
            });

      - name: Notify Slack
        if: ${{ secrets.SLACK_WEBHOOK_URL != '' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "PRISM orchestrator run for ${{ github.sha }} completed. lint=${{ needs.lint.result }}, web=${{ needs['web-ci'].result }}, cli=${{ needs.cli.result }}"
            }

      - name: Notify ClickUp
        if: ${{ secrets.CLICKUP_WEBHOOK_URL != '' }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"status":"${{ needs.status-report.result }}","context":"${{ github.repository }}#${{ github.run_id }}"}' \
            '${{ secrets.CLICKUP_WEBHOOK_URL }}'

      - name: Notify Asana
        if: ${{ secrets.ASANA_WEBHOOK_URL != '' }}
        run: |
          curl -X POST -H 'Content-Type: application/json' \
            -d '{"status":"${{ needs.status-report.result }}","context":"${{ github.repository }}#${{ github.run_id }}"}' \
            '${{ secrets.ASANA_WEBHOOK_URL }}'

      - name: Announce agent routing
        uses: actions/github-script@v7
        with:
          script: |
            const agents = {
              Lucidia: 'blackroad-lucidia-bot',
              Codex: 'blackroad-codex-bot',
              Cadillac: 'blackroad-cadillac-bot'
            };
            core.notice(`Agent routing: ${JSON.stringify(agents)}`);
