name: preview-environment

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: infra/preview-env
  PREVIEW_DOMAIN: dev.blackroad.io

jobs:
  provision:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Collect pull request metadata
        id: pr
        run: |
          echo "number=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
          echo "head_sha=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_OUTPUT"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.PREVIEW_ENV_AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.PREVIEW_ENV_ECR_REGISTRY }}
        run: |
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REGISTRY"

      - name: Build preview image
        env:
          ECR_REGISTRY: ${{ secrets.PREVIEW_ENV_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.PREVIEW_ENV_ECR_REPOSITORY }}
          PR_NUMBER: ${{ steps.pr.outputs.number }}
        run: |
          IMAGE_TAG="pr${PR_NUMBER}"
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
          echo "IMAGE_URI=${IMAGE_URI}" >> "$GITHUB_ENV"
          docker build --build-arg GIT_SHA=${{ steps.pr.outputs.head_sha }} -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_IN_AUTOMATION: true
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.PREVIEW_ENV_TF_STATE_BUCKET }}" \
            -backend-config="dynamodb_table=${{ secrets.PREVIEW_ENV_TF_LOCK_TABLE }}" \
            -backend-config="key=preview/pr-${{ steps.pr.outputs.number }}.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_pr_number: ${{ steps.pr.outputs.number }}
          TF_VAR_container_image: ${{ env.IMAGE_URI }}
          TF_VAR_cluster_arn: ${{ secrets.PREVIEW_ENV_CLUSTER_ARN }}
          TF_VAR_execution_role_arn: ${{ secrets.PREVIEW_ENV_EXECUTION_ROLE_ARN }}
          TF_VAR_task_role_arn: ${{ secrets.PREVIEW_ENV_TASK_ROLE_ARN }}
          TF_VAR_subnet_ids: ${{ secrets.PREVIEW_ENV_PRIVATE_SUBNET_IDS }}
          TF_VAR_alb_subnet_ids: ${{ secrets.PREVIEW_ENV_PUBLIC_SUBNET_IDS }}
          TF_VAR_vpc_id: ${{ secrets.PREVIEW_ENV_VPC_ID }}
          TF_VAR_hosted_zone_id: ${{ secrets.PREVIEW_ENV_HOSTED_ZONE_ID }}
          TF_VAR_hosted_zone_name: ${{ env.PREVIEW_DOMAIN }}
          TF_VAR_env_vars: ${{ secrets.PREVIEW_ENV_VARS_JSON }}
          TF_VAR_secrets: ${{ secrets.PREVIEW_ENV_SECRETS_JSON }}
        run: |
          terraform apply -auto-approve

      - name: Capture outputs
        id: tf
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform output -json > tf-outputs.json
          cat tf-outputs.json
          URL=$(jq -r '.preview_url.value // .preview_url' tf-outputs.json)
          echo "preview_url=${URL}" >> "$GITHUB_OUTPUT"

      - name: Comment with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = process.env.PREVIEW_URL;
            if (!url) {
              console.log('Preview URL missing, skipping PR comment.');
              return;
            }
            const body = `ðŸš€ Preview environment ready: [${url}](${url})`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
        env:
          PREVIEW_URL: ${{ steps.tf.outputs.preview_url }}

      - name: Notify Slack
        if: ${{ steps.tf.outputs.preview_url }}
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_PREVIEW_CHANNEL }}",
              "text": "PR #${{ steps.pr.outputs.number }} preview: ${{ steps.tf.outputs.preview_url }}"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  destroy:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.PREVIEW_ENV_AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_IN_AUTOMATION: true
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.PREVIEW_ENV_TF_STATE_BUCKET }}" \
            -backend-config="dynamodb_table=${{ secrets.PREVIEW_ENV_TF_LOCK_TABLE }}" \
            -backend-config="key=preview/pr-${{ github.event.pull_request.number }}.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform destroy
        working-directory: ${{ env.TF_WORKING_DIR }}
        env:
          TF_VAR_region: ${{ env.AWS_REGION }}
          TF_VAR_pr_number: ${{ github.event.pull_request.number }}
          TF_VAR_container_image: "${{ secrets.PREVIEW_ENV_ECR_REGISTRY }}/${{ secrets.PREVIEW_ENV_ECR_REPOSITORY }}:pr${{ github.event.pull_request.number }}"
          TF_VAR_cluster_arn: ${{ secrets.PREVIEW_ENV_CLUSTER_ARN }}
          TF_VAR_execution_role_arn: ${{ secrets.PREVIEW_ENV_EXECUTION_ROLE_ARN }}
          TF_VAR_task_role_arn: ${{ secrets.PREVIEW_ENV_TASK_ROLE_ARN }}
          TF_VAR_subnet_ids: ${{ secrets.PREVIEW_ENV_PRIVATE_SUBNET_IDS }}
          TF_VAR_alb_subnet_ids: ${{ secrets.PREVIEW_ENV_PUBLIC_SUBNET_IDS }}
          TF_VAR_vpc_id: ${{ secrets.PREVIEW_ENV_VPC_ID }}
          TF_VAR_hosted_zone_id: ${{ secrets.PREVIEW_ENV_HOSTED_ZONE_ID }}
          TF_VAR_hosted_zone_name: ${{ env.PREVIEW_DOMAIN }}
          TF_VAR_env_vars: ${{ secrets.PREVIEW_ENV_VARS_JSON }}
          TF_VAR_secrets: ${{ secrets.PREVIEW_ENV_SECRETS_JSON }}
        run: |
          terraform destroy -auto-approve

      - name: Notify Slack teardown
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_PREVIEW_CHANNEL }}",
              "text": "Preview for PR #${{ github.event.pull_request.number }} destroyed"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
