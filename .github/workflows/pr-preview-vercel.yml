name: PR Preview â€” Vercel
on:
  pull_request:
    paths: [ 'sites/blackroad/**' ]
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: write
jobs:
  vercel-preview:
    if: ${{ secrets.VERCEL_TOKEN != '' && secrets.VERCEL_ORG_ID != '' && secrets.VERCEL_PROJECT_ID != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Install & Build
        run: |
          cd sites/blackroad
          npm ci --omit=optional || npm i --package-lock-only
          npm run build
      - name: Deploy Preview (Vercel)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        id: vercel
        run: |
          npm i -g vercel@latest
          cd sites/blackroad
          vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
          url=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN" --confirm --env VITE_SITE_URL="${{ vars.BLACKROAD_URL || format('https://{0}', vars.BLACKROAD_DOMAIN || 'blackroad.io') }}")
          echo "url=$url" >> $GITHUB_OUTPUT
      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.vercel.outputs.url }}`;
            const pr = context.payload.pull_request.number;
            if (!url) return;
            await github.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: pr,
              body: `â–² **Vercel preview**: ${url}`
            });
      - name: Update PR Preview Badge
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const url = `${{ steps.vercel.outputs.url }}`;
            if (!url) return;
            const badge = `![Preview](https://img.shields.io/badge/preview-vercel-success?logo=vercel)`;
            const body = (`${badge}\n\nðŸ”— ${url}\n\n` + (pr.body || '').replace(/!\[Preview\]\([^\)]+\)[\s\S]*?(?=\n\n|$)/,'')).trim();
            await github.pulls.update({owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number, body});
