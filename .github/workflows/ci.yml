name: prism-console-ci
name: CI

on:
  workflow_call:
    inputs:
      run-preview:
        description: "Deploy preview environment (pull requests only)"
        default: true
        required: false
        type: boolean
    secrets:
      vercel-token:
        required: false
      vercel-org-id:
        required: false
      vercel-project-id:
        required: false

permissions:
  contents: read
  checks: read

jobs:
  quality:
    name: Web quality checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: apps/prism-console-web/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: apps/prism-console-web
        run: pnpm install --ignore-workspace

      - name: Lint
        working-directory: apps/prism-console-web
        run: pnpm lint

      - name: Type check
        working-directory: apps/prism-console-web
        run: pnpm type-check

      - name: Unit tests
        working-directory: apps/prism-console-web
        run: pnpm test

      - name: Install Playwright browsers
        working-directory: apps/prism-console-web
        run: pnpm exec playwright install --with-deps

      - name: E2E tests
        working-directory: apps/prism-console-web
        run: pnpm test:e2e

      - name: Build
        working-directory: apps/prism-console-web
        env:
          NEXT_DISABLE_LOCKFILE_CHECK: "1"
          NODE_ENV: production
        run: pnpm build

  preview:
    name: Deploy preview environment
    needs: quality
    if: ${{ inputs.run-preview && github.event_name == 'pull_request' && inputs.vercel-token != '' && inputs.vercel-org-id != '' && inputs.vercel-project-id != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
          cache-dependency-path: apps/prism-console-web/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: apps/prism-console-web
        run: pnpm install --ignore-workspace

      - name: Pull Vercel environment information
        working-directory: apps/prism-console-web
        env:
          VERCEL_TOKEN: ${{ inputs.vercel-token }}
          VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
          VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
        run: pnpm dlx vercel pull --yes --environment=preview

      - name: Build preview
        working-directory: apps/prism-console-web
        env:
          VERCEL_TOKEN: ${{ inputs.vercel-token }}
          VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
          VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
          NEXT_DISABLE_LOCKFILE_CHECK: "1"
        run: pnpm dlx vercel build

      - name: Deploy preview
        working-directory: apps/prism-console-web
        env:
          VERCEL_TOKEN: ${{ inputs.vercel-token }}
          VERCEL_ORG_ID: ${{ inputs.vercel-org-id }}
          VERCEL_PROJECT_ID: ${{ inputs.vercel-project-id }}
        run: pnpm dlx vercel deploy --prebuilt
          node-version: 20
      - run: npm install
      - run: npm run format:check
      - run: npm run lint
      - run: npm test
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install fastapi pydantic pytest httpx
      - run: pytest srv/lucidia-llm/test_app.py
