name: Lucidia CI
on:
  pull_request:
    branches: ["*"]

permissions:
  contents: read
  actions: read
  pull-requests: read

concurrency:
  group: lucidia-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      # ❗️ Your real build/test steps go here
      - run: echo "Run Lucidia build/tests here"

      - name: Main Branch Check (local)
        uses: ./.github/actions/main-branch-check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          main_branch: main
          recency_days: 7

name: lucidia-ci
name: Lucidia Cognitive System CI/CD

on:
  pull_request:
    branches: ["*"]

permissions:
  contents: read
  actions: read
  pull-requests: read

concurrency:
  group: lucidia-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      # ❗️ Your real build/test steps go here
      - run: echo "Run Lucidia build/tests here"

      - name: Main Branch Check (local)
        uses: ./.github/actions/main-branch-check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          main_branch: main
          recency_days: 7

name: Lucidia Cognitive System CI/CD

on:
  pull_request:
    branches: ["*"]

permissions:
  contents: read
  actions: read
  pull-requests: read

concurrency:
  group: lucidia-ci-${{ github.ref }}
  cancel-in-progress: true
  # ---------- Deploy to Staging ----------
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [test, docker-build, infrastructure-check]
    if: github.ref == 'refs/heads/develop'
    environment:
      name: staging
      url: https://staging.blackroad.io
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Deploy
        run: |
          echo "Deploying to staging..."
          # kubectl apply -f k8s/staging/
          # docker compose -f docker-compose.staging.yml up -d
      - name: Smoke tests (staging)
        run: |
          sleep 60
          npm run test:smoke -- --baseUrl=https://staging.blackroad.io
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  # ---------- Deploy to Production ----------
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, docker-build, performance-test]
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: production
      url: https://blackroad.io
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write  # for OIDC to AWS
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.28.0
      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: lucidia-deploy-${{ github.run_id }}
      - name: Deploy
        run: |
          echo "Deploying to production..."
          # kubectl apply -f k8s/production/
          # aws ecs update-service --cluster lucidia --service lucidia-service --force-new-deployment
      - name: Health checks
        run: |
          sleep 120
          curl -f https://blackroad.io/health
          curl -f https://blackroadinc.us/health
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          text: 'Lucidia production deploy ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      # ❗️ Your real build/test steps go here
      - run: echo "Run Lucidia build/tests here"

      - name: Main Branch Check (local)
        uses: ./.github/actions/main-branch-check
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          main_branch: main
          recency_days: 7

