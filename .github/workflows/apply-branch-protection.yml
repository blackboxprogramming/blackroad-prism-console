name: Apply Branch Protection (best-effort)
on:
  push:
    branches: [main]
  workflow_dispatch:
permissions:
  contents: read
  pull-requests: read
  repository-projects: write
jobs:
  protect:
    runs-on: ubuntu-latest
    steps:
      - name: Apply protection with GITHUB_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          set -e
          BASE="https://api.github.com/repos/${OWNER}/${REPO}/branches/main/protection"
          JSON_PAYLOAD=$(cat <<'JSON'
          {
            "required_status_checks": {
              "strict": true,
              "checks": [
                {"context":"Deploy Quantum App (safe)"},
                {"context":"CodeQL"},
                {"context":"Snyk Scan"},
                {"context":"Trivy FS Scan"},
                {"context":"Gitleaks (secrets)"}
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 1
            },
            "restrictions": null,
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_conversation_resolution": true,
            "lock_branch": false,
            "allow_fork_syncing": true
          }
          JSON
          )
          code=$(curl -sS -o /tmp/resp.json -w "%{http_code}" \
            -X PUT -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" \
            "$BASE" -d "$JSON_PAYLOAD" || true)
          echo "HTTP $code from protection API"
          if [ "$code" = "200" ] || [ "$code" = "201" ]; then
            echo "✅ Branch protection applied with GITHUB_TOKEN."
            exit 0
          fi
          echo "::warning::Could not apply protection with GITHUB_TOKEN (HTTP $code)."
      - name: Retry with ADMIN_TOKEN (optional)
        if: ${{ secrets.ADMIN_TOKEN != '' }}
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          set -e
          BASE="https://api.github.com/repos/${OWNER}/${REPO}/branches/main/protection"
          JSON_PAYLOAD=$(cat <<'JSON'
          {
            "required_status_checks": {
              "strict": true,
              "checks": [
                {"context":"Deploy Quantum App (safe)"},
                {"context":"CodeQL"},
                {"context":"Snyk Scan"},
                {"context":"Trivy FS Scan"},
                {"context":"Gitleaks (secrets)"}
              ]
            },
            "enforce_admins": true,
            "required_pull_request_reviews": {
              "dismiss_stale_reviews": true,
              "require_code_owner_reviews": true,
              "required_approving_review_count": 1
            },
            "restrictions": null,
            "required_linear_history": true,
            "allow_force_pushes": false,
            "allow_deletions": false,
            "required_conversation_resolution": true,
            "lock_branch": false,
            "allow_fork_syncing": true
          }
          JSON
          )
          code=$(curl -sS -o /tmp/resp.json -w "%{http_code}" \
            -X PUT -H "Authorization: Bearer $ADMIN_TOKEN" -H "Accept: application/vnd.github+json" \
            "$BASE" -d "$JSON_PAYLOAD" || true)
          echo "HTTP $code from protection API (ADMIN_TOKEN)"
          if [ "$code" = "200" ] || [ "$code" = "201" ]; then
            echo "✅ Branch protection applied with ADMIN_TOKEN."
          else
            echo "::warning::Still cannot apply branch protection (HTTP $code). Admin rights are required."
          fi
