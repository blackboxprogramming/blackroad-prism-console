[tool.poetry]
name = "roadglitch"
version = "0.1.0"
description = "RoadGlitch automation service"
authors = ["BlackRoad"]
readme = "README.md"
packages = [
  { include = "roadglitch", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = { extras = ["standard"], version = "^0.29.0" }
structlog = "^24.1.0"
pydantic-settings = "^2.3.0"
sqlmodel = "^0.0.16"
aiohttp = "^3.9.3"
httpx = "^0.27.0"
prometheus-client = "^0.19.0"
python-multipart = "^0.0.9"
pyyaml = "^6.0.1"
jsonschema = "^4.21.1"
redis = "^5.0.3"
async-timeout = "^4.0.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-asyncio = "^0.23.5"
coverage = "^7.4.1"
ruff = "^0.3.5"
mypy = "^1.8.0"
schemathesis = "^3.22.3"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100

[tool.pytest.ini_options]
addopts = "-q --maxfail=1"
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["roadglitch"]
omit = ["tests/*"]

[tool.coverage.report]
omit = ["tests/*"]
fail_under = 80

[tool.mypy]
python_version = "3.11"
strict = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
plugins = ["pydantic.mypy"]

