name: production
slug: prod
state: active
description: >-
  Customer-facing footprint serving blackroad.io. GitHub Pages delivers the
  marketing site while container workloads deploy through the BlackRoad • Deploy
  workflow and reusable ECS/Fly harnesses.
branch: main
contacts:
  reviewers:
    - blackboxprogramming
  slack: "#eng"
domains:
  marketing: https://blackroad.io
  canonical: https://www.blackroad.io
  api: https://api.blackroad.io
  status: https://status.blackroad.io
infrastructure:
  cloud: aws
  region: us-west-2
  availability_zones:
    - us-west-2a
    - us-west-2b
  network:
    vpc_cidr: 10.40.0.0/16
  terraform:
    root: br-infra-iac/envs/prod
    backend:
      bucket: br-tfstate-<unique>
      key: prod/terraform.tfstate
      region: us-west-2
      lock_table: br-terraform-lock
    modules:
      - modules/network
      - modules/ecs-cluster
      - modules/ecr
      - modules/rds-postgres
automation:
  required_checks:
    push:
      main:
        - BlackRoad • Deploy
        - change-approve (CAB gate)
  workflows:
    - name: BlackRoad • Deploy
      file: .github/workflows/blackroad-deploy.yml
      triggers:
        - push (main)
        - workflow_dispatch (target: modern | legacy-ssh)
      summary: >-
        Builds the SPA, triggers the deploy webhook, verifies health endpoints,
        purges Cloudflare if necessary, and posts Slack notifications.
      secrets_required:
        - BR_DEPLOY_SECRET
        - BR_DEPLOY_URL
        - CF_ZONE_ID
        - CF_API_TOKEN
        - SLACK_WEBHOOK_URL
    - name: Reusable Fly.io deploy
      file: .github/workflows/reusable-fly-deploy.yml
      triggers:
        - workflow_call
      summary: Shared Fly.io deploy harness for ancillary services.
      secrets_required:
        - FLY_API_TOKEN
    - name: Reusable AWS ECS deploy
      file: .github/workflows/reusable-aws-ecs-deploy.yml
      triggers:
        - workflow_call
      summary: Registers a new task definition revision and rolls ECS services
        in production.
      secrets_required:
        - AWS_PROD_DEPLOY_ROLE_ARN
        - AWS_PROD_EXTERNAL_ID
    - name: deploy-canary
      file: .github/workflows/deploy-canary.yml
      triggers:
        - push (main)
        - workflow_dispatch (canary percent input)
      summary: Canary promotion that gradually shifts traffic while watching
        CloudWatch metrics.
      variables_required:
        - AWS_REGION
        - ECR_REPO
        - ECS_CLUSTER
        - ECS_SERVICE
        - TG_BLUE_ARN
        - TG_GREEN_ARN
        - HTTPS_LISTENER_ARN
        - APP_URL
        - ALB_ARN_SUFFIX
    - name: deploy-canary-ladder
      file: .github/workflows/deploy-canary-ladder.yml
      triggers:
        - workflow_dispatch (steps + soak configuration)
      summary: Multi-step promotion that increases canary traffic in stages with
        automated rollback.
      variables_required:
        - AWS_REGION
        - ECR_REPO
        - ECS_CLUSTER
        - ECS_SERVICE
        - TG_BLUE_ARN
        - TG_GREEN_ARN
        - HTTPS_LISTENER_ARN
        - APP_URL
        - ALB_ARN_SUFFIX
        - API_URL
    - name: Deploy & Self-Heal
      file: .github/workflows/deploy-self-heal.yml
      triggers:
        - push (main)
      summary: Legacy SSH fallback that rsyncs artifacts to long-lived hosts and
        rolls back automatically when health probes fail.
      secrets_required:
        - BR_HOST
        - BR_USER
        - BR_SSH_KEY
deployments:
  - service: marketing-site
    type: static-site
    provider: github-pages
    workflow: .github/workflows/blackroad-deploy.yml
    artifacts:
      path: sites/blackroad
    domain: https://blackroad.io
    health_check: https://blackroad.io/healthz
  - service: api-gateway
    type: container-service
    provider: aws-ecs-fargate
    terraform_directory: br-infra-iac/envs/prod
    terraform_backend:
      bucket: br-tfstate-<unique>
      key: prod/terraform.tfstate
      region: us-west-2
      lock_table: br-terraform-lock
    module: modules/ecs-service-alb
    state: planned
    notes: Production wiring follows the dev module once traffic moves fully to
      ECS.
    health_check: https://api.blackroad.io/health
    image_repository: br-api-gateway
    scaling:
      desired_count: 2
      min_capacity: 2
      max_capacity: 6
    environment:
      NODE_ENV: production
change_management:
  approvals:
    - .github/workflows/change-approve.yml
  policy_gates:
    - name: cab-approval
      description: CAB approval must clear via change-approve.yml before
        promoting builds.
      workflow: .github/workflows/change-approve.yml
    - name: release-runbook
      description: Execute the infra release policy so rollback and comms stay
        coordinated.
      runbook: runbooks/examples/infra_release_policy.yaml
  runbooks:
    - README-DEPLOY.md
    - README-OPS.md
observability:
  health_checks:
    - https://blackroad.io/healthz
    - https://blackroad.io/api/version
    - https://api.blackroad.io/health
