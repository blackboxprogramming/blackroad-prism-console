name: preview
slug: pr
state: active
description: >-
  Ephemeral review environments created per pull request on AWS ECS Fargate.
  Each PR receives a dedicated hostname under dev.blackroad.io and tears down
  automatically when the PR closes.
contacts:
  slack: "#eng"
domains:
  root: https://dev.blackroad.io
  pattern: https://pr-<pr-number>.dev.blackroad.io
infrastructure:
  cloud: aws
  region: us-east-1
  terraform:
    root: infra/preview-env
    module: modules/preview-env
    backend:
      bucket_secret: PREVIEW_ENV_TF_STATE_BUCKET
      key_pattern: preview/pr-<pr-number>.tfstate
      lock_table_secret: PREVIEW_ENV_TF_LOCK_TABLE
      region: us-east-1
    outputs:
      - preview_url
      - service_name
automation:
  workflows:
    - name: preview-environment
      file: .github/workflows/preview-env.yml
      triggers:
        - pull_request (opened, reopened, synchronize, closed)
      summary: >-
        Builds a PR-specific image, applies the preview Terraform stack, posts
        the URL to GitHub and Slack, and tears the stack down on close.
      secrets:
        - PREVIEW_ENV_AWS_ROLE
        - PREVIEW_ENV_ECR_REGISTRY
        - PREVIEW_ENV_ECR_REPOSITORY
        - PREVIEW_ENV_CLUSTER_ARN
        - PREVIEW_ENV_EXECUTION_ROLE_ARN
        - PREVIEW_ENV_TASK_ROLE_ARN
        - PREVIEW_ENV_PRIVATE_SUBNET_IDS
        - PREVIEW_ENV_PUBLIC_SUBNET_IDS
        - PREVIEW_ENV_VPC_ID
        - PREVIEW_ENV_HOSTED_ZONE_ID
        - PREVIEW_ENV_VARS_JSON
        - PREVIEW_ENV_SECRETS_JSON
        - PREVIEW_ENV_TF_STATE_BUCKET
        - PREVIEW_ENV_TF_LOCK_TABLE
        - SLACK_PREVIEW_CHANNEL
        - SLACK_BOT_TOKEN
    - name: preview-container-image
      file: .github/workflows/preview-containers.yml
      triggers:
        - pull_request (opened, reopened, synchronize, ready_for_review)
      summary: >-
        Builds and pushes a PR-scoped container image to GHCR, publishes an
        SBOM and Grype scan, and comments usage instructions on the PR.
      secrets:
        - GHCR_PAT (optional when a fine-grained token is required)
        - SLACK_BOT_TOKEN (optional for downstream notification jobs)
deployments:
  - service: web-console
    type: container-service
    provider: aws-ecs-fargate
    workflow: .github/workflows/preview-env.yml
    terraform_directory: infra/preview-env
    terraform_backend:
      bucket_secret: PREVIEW_ENV_TF_STATE_BUCKET
      lock_table_secret: PREVIEW_ENV_TF_LOCK_TABLE
      key_template: preview/pr-<pr-number>.tfstate
    domain_pattern: https://pr-<pr-number>.dev.blackroad.io
    health_check: https://pr-<pr-number>.dev.blackroad.io/health
    environment:
      AWS_REGION: us-east-1
      PREVIEW_DOMAIN: dev.blackroad.io
    secrets:
      - PREVIEW_ENV_AWS_ROLE
      - PREVIEW_ENV_ECR_REGISTRY
      - PREVIEW_ENV_ECR_REPOSITORY
      - PREVIEW_ENV_CLUSTER_ARN
      - PREVIEW_ENV_EXECUTION_ROLE_ARN
      - PREVIEW_ENV_TASK_ROLE_ARN
      - PREVIEW_ENV_PRIVATE_SUBNET_IDS
      - PREVIEW_ENV_PUBLIC_SUBNET_IDS
      - PREVIEW_ENV_VPC_ID
      - PREVIEW_ENV_HOSTED_ZONE_ID
      - PREVIEW_ENV_VARS_JSON
      - PREVIEW_ENV_SECRETS_JSON
      - SLACK_PREVIEW_CHANNEL
      - SLACK_BOT_TOKEN
    notifications:
      slack:
        channel_secret: SLACK_PREVIEW_CHANNEL
        token_secret: SLACK_BOT_TOKEN
  - service: web-console-preview-image
    type: container-image
    registry: ghcr.io/<owner>/blackroad-prism-console
    workflow: .github/workflows/preview-containers.yml
    description: Container image artifact attached to each PR for local smoke testing.
    outputs:
      - image: ghcr.io/<owner>/blackroad-prism-console:pr-<pr-number>-<short-sha>
      - sbom_artifact: pr-<pr-number>-sbom
      - vulnerability_scan: Code scanning SARIF upload
    health_check: docker run --rm ghcr.io/<owner>/blackroad-prism-console:pr-<pr-number>-<short-sha>
change_management:
  approvals: []
observability:
  verification:
    - terraform output -raw preview_url
    - aws ecs describe-services --cluster <cluster-arn> --services pr-<pr-number> --region us-east-1
    - docker pull ghcr.io/<owner>/blackroad-prism-console:pr-<pr-number>-<short-sha>
    - docker run --rm ghcr.io/<owner>/blackroad-prism-console:pr-<pr-number>-<short-sha>
branch: pr/*
description: >-
  Ephemeral ECS/Fargate environments spun up per pull request for validation and
  stakeholder review.
url_template: https://pr-<pr-number>.dev.blackroad.io
reviewers:
  - devx-team
  - platform-ops
deploy_targets:
  - surface: application
    provider: aws_ecs
    cluster_variable: ECS_CLUSTER
    service_family: prism-console-preview
    container:
      image_repository_variable: ECR_REPO
      port_variable: CONTAINER_PORT
    load_balancer:
      arn_variable: ALB_ARN
      https_listener_variable: HTTPS_LISTENER_ARN
      host_template: pr-<pr-number>.dev.blackroad.io
    route53:
      hosted_zone_variable: HOSTED_ZONE_ID
      dns_name_variable: ALB_DNS
    iam:
      execution_role_variable: TASK_EXECUTION_ROLE_ARN
      task_role_variable: TASK_ROLE_ARN
    network:
      vpc_variable: VPC_ID
      subnet_variable: SUBNETS
      security_group_variable: SERVICE_SG
workflow: .github/workflows/preview.yml
lifecycle:
  create_on: [opened, reopened, synchronize]
  destroy_on: [closed]
inputs:
  required_repository_variables:
    - AWS_REGION
    - ECS_CLUSTER
    - VPC_ID
    - SUBNETS
    - SERVICE_SG
    - ALB_ARN
    - HTTPS_LISTENER_ARN
    - ALB_ZONE_ID
    - ALB_DNS
    - HOSTED_ZONE_ID
    - CONTAINER_PORT
    - ECR_REPO
    - TASK_EXECUTION_ROLE_ARN
    - TASK_ROLE_ARN
  required_secrets:
    - AWS_ROLE_TO_ASSUME
notifications:
  slack_channel: #eng
  pr_comment: true
smoke_tests:
  - curl -fsS $PREVIEW_URL/health
notes:
  - >-
    Workflow provisions target groups, listener rules, Route53 alias records,
    and the ECS service, then tears them down when the PR closes.
