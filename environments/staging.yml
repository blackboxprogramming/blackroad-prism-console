name: staging
slug: stg
state: provisioning
description: >-
  Pre-production environment for QA. Static assets publish to stage.blackroad.io
  while AWS infrastructure scaffolding mirrors production.
contacts:
  slack: "#eng"
domains:
  marketing: https://stage.blackroad.io
infrastructure:
  cloud: aws
  region: us-west-2
  terraform:
    root: br-infra-iac/envs/stg
    backend:
      bucket: br-tfstate-<unique>
      key: stg/terraform.tfstate
      region: us-west-2
      lock_table: br-terraform-lock
    modules:
      - modules/network
      - modules/ecs-cluster
      - modules/ecr
      - modules/rds-postgres
    outputs:
      - vpc_id
      - private_subnets
      - ecs_cluster
      - db_endpoint
    repositories:
      - br-api-gateway
      - br-products-site
automation:
  workflows:
    - name: Stage Proof Artifact
      file: .github/workflows/pages-stage.yml
      triggers:
        - push (main, blackroad-stage/**)
        - schedule (daily 06:05 UTC)
        - workflow_dispatch
      summary: >-
        Generates a proof payload, bakes stage assets, and archives the build
        without publishing DNS changes.
      secrets:
        - AWAKEN_SEED
    - name: AWS ECS deploy (reusable)
      file: .github/workflows/reusable-aws-ecs-deploy.yml
      triggers:
        - workflow_call
      summary: >-
        Registers a new task definition revision and forces an ECS deployment
        for staging services when invoked by API or bridge pipelines.
      secrets:
        - AWS_STAGING_DEPLOY_ROLE_ARN
        - AWS_STAGING_EXTERNAL_ID
deployments:
  - service: marketing-site
    type: static-site
    provider: github-pages
    repo: blackboxprogramming/blackroad-prism-console
    workflow: .github/workflows/pages-stage.yml
    artifacts:
      path: blackroad-stage
    domain: https://stage.blackroad.io
    health_check: https://stage.blackroad.io/health.json
  - service: api-gateway
    type: container-service
    provider: aws-ecs-fargate
    terraform_directory: br-infra-iac/envs/stg
    state: planned
    notes: >-
      Network, ECS, and RDS resources are defined; service wiring will follow the
      production module once ready.
change_management:
  approvals:
    - .github/workflows/change-approve.yml
  policy_gates:
    - name: release-runbook
      description: Run the infra release policy to coordinate verification and fast rollback while staging matures.
      runbook: runbooks/examples/infra_release_policy.yaml
observability:
  health_checks:
    - name: static-health
      url: https://stage.blackroad.io/health.json
branch: staging
description: >-
  Pre-production stack that mirrors production for integration testing, release
  rehearsals, and data verification before a mainline cutover.
urls:
  primary: https://staging.blackroad.io
  preview_route: https://staging.blackroad.io/prism
reviewers:
  - platform-ops
  - qa-team
  - security-reviewers
deploy_targets:
  - surface: marketing-site
    provider: cloudflare_pages
    artifact_path: sites/blackroad
    workflow: .github/workflows/pages-stage.yml
  - surface: customer-app
    provider: fly_io
    app: blackroad-app-staging
    release_channel: staging
    regions: [iad]
    workflow: .github/workflows/canary.yml
    secrets:
      - FLY_STAGING_API_TOKEN
  - surface: api
    provider: aws_ecs
    cluster: blackroad-staging
    service: prism-console-api-staging
    workflow: .github/workflows/_backup_132_deploy.yml
    container:
      port: 4010
      healthcheck: /api/llm/health
    load_balancer:
      host: api.staging.blackroad.io
      https_listener_secret: AWS_STAGING_HTTPS_LISTENER_ARN
    iam:
      deploy_role_secret: AWS_STAGING_DEPLOY_ROLE
qa:
  regression_suite:
    command: make test ENV=staging
    location: tools/lucidia-autotester
  smoke_tests:
    - curl -fsS https://staging.blackroad.io/healthz
    - curl -fsS https://api.staging.blackroad.io/api/llm/health
approvals:
  required_roles:
    - platform
    - qa
  change_windows:
    - name: daily-promotion
      schedule: 16:00-18:00 UTC
observability:
  grafana: https://blackroad.io/monitoring
  notes: Mirrors production dashboards with staging data source wiring.
notes:
  - >-
    Exercise the autopal environment access workflow for staging when dual
    control is required.
