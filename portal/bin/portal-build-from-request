#!/usr/bin/env bash
set -euo pipefail

DEFAULT_ROOT="/home/pi/portal"
ROOT="${PORTAL_ROOT:-$DEFAULT_ROOT}"
ROOT="${ROOT%/}"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if [[ ! -d "$ROOT" ]]; then
  ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
fi

FREEZE_FILE="$ROOT/configs/frozen.txt"
AUDIT_FILE="$ROOT/audits/portal.log"
mkdir -p "$ROOT/configs" "$ROOT/audits"
touch "$FREEZE_FILE"

if [[ $# -ne 1 ]]; then
  echo "Usage: portal-build-from-request <request.json>" >&2
  exit 1
fi

REQ="$1"
if [[ ! -f "$REQ" ]]; then
  echo "Request file not found: $REQ" >&2
  exit 1
fi

label="$(jq -r '.label // empty' "$REQ")"
if [[ -z "$label" ]]; then
  echo "Label missing in $REQ" >&2
  exit 2
fi

thresh="$(jq -r '.policy.threshold' "$REQ")"
approval_dir="$ROOT/configs/approvals/$label"
collected=$(find "$approval_dir" -type f ! -name 'request.sha256' 2>/dev/null | wc -l | tr -d ' ')
if [[ -z "$collected" ]]; then
  collected=0
fi
if (( collected < thresh )); then
  echo "Refuse: approvals $collected < threshold $thresh" >&2
  exit 2
fi

fee="$(jq -r '.payload.fee_rate_sat_vb' "$REQ")"
outputs_file="$ROOT/configs/${label}.outputs.json"
coin_file="$ROOT/configs/${label}.coin_control.json"

jq -r '.payload.outputs' "$REQ" > "$outputs_file"
jq -r '.payload.coin_control // {}' "$REQ" > "$coin_file"

mapfile -t excludes < <(jq -r '.payload.coin_control.exclude_utxos[]?' "$REQ")
if ((${#excludes[@]})); then
  tmp="$(mktemp)"
  cat "$FREEZE_FILE" > "$tmp"
  printf '%s\n' "${excludes[@]}" >> "$tmp"
  sort -u "$tmp" | grep -v '^[[:space:]]*$' > "$FREEZE_FILE"
  rm -f "$tmp"
fi

if command -v jq >/dev/null 2>&1; then
  jq -n --arg utc "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
        --arg cmd "portal-build-from-request" \
        --arg label "$label" \
        --arg info "prepared" \
        '{utc:$utc,cmd:$cmd,label:$label,info:$info}' >> "$AUDIT_FILE"
fi

echo "READY: outputs at $outputs_file  fee $fee"
