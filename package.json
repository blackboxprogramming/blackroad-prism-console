{
  "name": "blackroad-api",
  "version": "1.0.0",
  "private": true,
  "description": "BlackRoad.io backend API (Express + SQLite + Socket.IO)",
  "main": "srv/blackroad-api/server_full.js",
  "type": "commonjs",
  "scripts": {
    "start": "next start",
    "dev": "next dev",
    "seed": "node scripts/seed_admin.js",
    "prepare": "husky",
    "lint": "eslint srv/blackroad-api/server_full.js tests/api_health.test.js tests/git_api.test.js",
    "format": "prettier . --write",
    "format:check": "prettier package.json tests/api_health.test.js srv/lucidia-llm/test_app.py var/www/blackroad/.prettierrc.json .prettierrc.json RUNME.sh Makefile .github/workflows/ci.yml CLEANUP_PLAN.md CLEANUP_DECISIONS.md CLEANUP_RESULTS.md ROLLBACK.md CHANGELOG.md --check --ignore-unknown",
    "test": "npx jest",
    "guard:dev-mode": "node scripts/security/dev_mode_guard.js",
    "start": "node srv/blackroad-api/server_full.js",
    "dev": "nodemon srv/blackroad-api/server_full.js",
    "seed": "node scripts/seed_admin.js",
    "prepare": "husky",
    "lint": "eslint --config .eslintrc.cjs srv/blackroad-api/server_full.js tests/api_health.test.js",
    "format": "prettier . --write",
    "format:check": "prettier package.json tests/api_health.test.js srv/lucidia-llm/test_app.py var/www/blackroad/.prettierrc.json .prettierrc.json RUNME.sh Makefile .github/workflows/ci.yml CLEANUP_PLAN.md CLEANUP_DECISIONS.md CLEANUP_RESULTS.md ROLLBACK.md CHANGELOG.md --check --ignore-unknown",
    "test": "jest tests/api_health.test.js",
    "typecheck": "echo 'no typecheck'",
    "health": "node scripts/health.js",
    "dev:site": "npm --prefix sites/blackroad run dev",
    "build": "next build && node scripts/build-codex-index.js",
    "test-agents-pack": "node tests/test_agents_mega.js",
    "frontend:dev": "npm --prefix sites/blackroad run dev",
    "frontend:build": "npm --prefix sites/blackroad run build",
    "fix-anything": "node .github/tools/codex-apply.js .github/prompts/codex-fix-anything.md || true",
    "demo": "brc plm:items:load --dir fixtures/plm/items && brc plm:bom:load --dir fixtures/plm/boms && brc mfg:wc:load --file fixtures/mfg/work_centers.csv && brc mfg:routing:load --dir fixtures/mfg/routings && brc mfg:routing:capcheck --item PROD-100 --rev B --qty 1000 && brc mfg:wi:render --item PROD-100 --rev B && brc mfg:spc:analyze --op OP-200 --window 50 && brc mfg:yield --period 2025-09 && brc mfg:mrp --demand artifacts/sop/allocations.csv --inventory fixtures/mfg/inventory.csv --pos fixtures/mfg/open_pos.csv && brc mfg:coq --period 2025-Q3"
    "build": "npm --prefix sites/blackroad run build",
    "test-agents-pack": "node tests/test_agents_mega.js",
    "frontend:dev": "npm --prefix sites/blackroad run dev",
    "frontend:build": "npm --prefix sites/blackroad run build",
    "fix-anything": "node .github/tools/codex-apply.js .github/prompts/codex-fix-anything.md || true"
  },
  "engines": {
    "node": ">=20"
  },
  "dependencies": {
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "bcrypt": "^5.1.1",
    "better-sqlite3": "^9.4.3",
    "compression": "^1.8.1",
    "cookie-session": "^2.0.0",
    "cors": "^2.8.5",
    "dotenv": "^16.4.5",
    "ethers": "^6.10.0",
    "express": "^4.19.2",
    "express-rate-limit": "^7.2.0",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "next": "^14.2.5",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "socket.io": "^4.7.5",
    "stripe": "^12.18.0",
    "systeminformation": "^5.25.11",
    "uuid": "^9.0.1",
    "yaml": "^2.3.4"
    "stripe": "^12.18.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.37.0",
    "@types/node": "^20.14.9",
    "@types/node-fetch": "^2.6.11",
    "@types/react": "^18.2.64",
    "cross-env": "^7.0.3",
    "eslint": "^9.12.0",
    "husky": "^9.0.10",
    "jest": "^29.7.0",
    "lint-staged": "^16.1.5",
    "nodemon": "^3.0.2",
    "prettier": "^3.3.3",
    "supertest": "^6.3.4",
    "typescript": "^5.6.3"
    "lint-staged": "^15.2.7"
  },
  "lint-staged": {
    "*.{js,jsx,mjs,cjs,ts,tsx}": [
      "eslint --fix",
      "prettier -w"
    ],
    "*": "prettier -w --ignore-unknown"
  }
}
