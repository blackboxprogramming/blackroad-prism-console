default_platform(:ios)

platform :ios do
  before_all do
    UI.message("⛳ BlackRoad Mobile lanes")
    setup_ci
  end

  lane :bump_build do
    new_build = Time.now.utc.strftime("%Y%m%d%H%M")
    sh("agvtool new-version -all #{new_build}")
    UI.message("Build number set to #{new_build}")
  end

  lane :unit_tests do
    scan(
      scheme: "BlackRoad",
      devices: ["iPhone 15"],
      code_coverage: true,
      prelaunch_simulation: true,
      result_bundle: true
    )
  end

  lane :build_ipa do
    gym(
      scheme: "BlackRoad",
      configuration: "Release",
      export_method: "app-store",
      clean: true,
      output_directory: "fastlane/build",
      output_name: "BlackRoad.ipa"
    )
  end

  lane :beta do
    bump_build
    unit_tests
    build_ipa
    upload_to_testflight(
      ipa: "fastlane/build/BlackRoad.ipa",
      skip_waiting_for_build_processing: false,
      distribute_external: false,
      groups: ["Internal", "QA"],
      changelog: Changelog.from_git_commits
    )
  end

  lane :release do |options|
    version = options[:version] || UI.input("Marketing version (e.g., 1.1.0):")
    increment_version_number(version_number: version)
    bump_build
    unit_tests
    build_ipa
    upload_to_testflight(
      ipa: "fastlane/build/BlackRoad.ipa",
      skip_waiting_for_build_processing: false,
      distribute_external: false,
      groups: ["Internal"]
    )
    UI.success("✅ Release #{version} uploaded to TestFlight (Internal). Promote manually in App Store Connect.")
  end

  lane :screenshots do
    UI.important("Add snapshot config if you want automated screenshots.")
  end

  lane :lint do
    sh("swiftformat . && swiftlint")
  rescue StandardError => e
    UI.error("Lint lane failed: #{e.message}")
    UI.user_error!("Install swiftformat and swiftlint before running the lint lane.")
  end

  lane :ci do
    bump_build
    unit_tests
    build_ipa
  end
end

module Changelog
  def self.from_git_commits
    range = Actions.last_git_tag || "HEAD~20"
    Actions.sh("git log --pretty=format:'%h %s' #{range}..HEAD")
  rescue StandardError
    "Autogenerated build"
  end
end
