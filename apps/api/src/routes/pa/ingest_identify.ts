import { Router } from 'express';
import fs from 'fs';
const r = Router(); const E='data/pa/events.jsonl', I='data/pa/identify.jsonl', G='data/pa/groups.jsonl', K='pa/sdk_keys.json';
const append=(p:string,row:any)=>{ fs.mkdirSync('data/pa',{recursive:true}); fs.appendFileSync(p, JSON.stringify(row)+'\n'); };
const lines=(p:string)=> fs.existsSync(p)? fs.readFileSync(p,'utf-8').trim().split('\n').filter(Boolean).map(l=>JSON.parse(l)):[ ];
const validKey=(k:string)=> fs.existsSync(K)? (JSON.parse(fs.readFileSync(K,'utf-8')).keys||[]).some((x:any)=>x.write_key===k) : (k===String(process.env.PA_DEFAULT_WRITE_KEY||''));
r.post('/ingest',(req,res)=>{ if(!validKey(String(req.body?.write_key||''))) return res.status(403).json({error:'invalid_write_key'}); append(E,{ ts:req.body?.ts||Date.now(), ...req.body }); res.json({ ok:true }); });
r.post('/identify',(req,res)=>{ append(I,{ ts:Date.now(), ...req.body }); res.json({ ok:true }); });
r.post('/group',(req,res)=>{ append(G,{ ts:Date.now(), ...req.body }); res.json({ ok:true }); });
r.get('/events/recent',(req,res)=>{ const s=String(req.query.subjectId||''), ev=String(req.query.event||''); const items=lines(E).reverse().filter((x:any)=>(!s||x.subjectId===s)&&(!ev||x.event===ev)).slice(0,200); res.json({ items }); });
export default r;
